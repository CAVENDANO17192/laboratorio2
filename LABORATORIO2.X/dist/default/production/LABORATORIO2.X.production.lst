

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sun Feb 02 23:28:36 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	intentry,global,class=CODE,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 2.10
    20                           ; Generated 31/07/2019 GMT
    21                           ; 
    22                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F887 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0007                     	;# 
    61  0008                     	;# 
    62  0009                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  000D                     	;# 
    67  000E                     	;# 
    68  000E                     	;# 
    69  000F                     	;# 
    70  0010                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0013                     	;# 
    74  0014                     	;# 
    75  0015                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0017                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001B                     	;# 
    83  001B                     	;# 
    84  001C                     	;# 
    85  001D                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  0081                     	;# 
    89  0085                     	;# 
    90  0086                     	;# 
    91  0087                     	;# 
    92  0088                     	;# 
    93  0089                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  008E                     	;# 
    97  008F                     	;# 
    98  0090                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0094                     	;# 
   105  0095                     	;# 
   106  0096                     	;# 
   107  0097                     	;# 
   108  0098                     	;# 
   109  0099                     	;# 
   110  009A                     	;# 
   111  009B                     	;# 
   112  009C                     	;# 
   113  009D                     	;# 
   114  009E                     	;# 
   115  009F                     	;# 
   116  0105                     	;# 
   117  0107                     	;# 
   118  0108                     	;# 
   119  0109                     	;# 
   120  010C                     	;# 
   121  010C                     	;# 
   122  010D                     	;# 
   123  010E                     	;# 
   124  010F                     	;# 
   125  0185                     	;# 
   126  0187                     	;# 
   127  0188                     	;# 
   128  0189                     	;# 
   129  018C                     	;# 
   130  018D                     	;# 
   131  0000                     	;# 
   132  0001                     	;# 
   133  0002                     	;# 
   134  0003                     	;# 
   135  0004                     	;# 
   136  0005                     	;# 
   137  0006                     	;# 
   138  0007                     	;# 
   139  0008                     	;# 
   140  0009                     	;# 
   141  000A                     	;# 
   142  000B                     	;# 
   143  000C                     	;# 
   144  000D                     	;# 
   145  000E                     	;# 
   146  000E                     	;# 
   147  000F                     	;# 
   148  0010                     	;# 
   149  0011                     	;# 
   150  0012                     	;# 
   151  0013                     	;# 
   152  0014                     	;# 
   153  0015                     	;# 
   154  0015                     	;# 
   155  0016                     	;# 
   156  0017                     	;# 
   157  0018                     	;# 
   158  0019                     	;# 
   159  001A                     	;# 
   160  001B                     	;# 
   161  001B                     	;# 
   162  001C                     	;# 
   163  001D                     	;# 
   164  001E                     	;# 
   165  001F                     	;# 
   166  0081                     	;# 
   167  0085                     	;# 
   168  0086                     	;# 
   169  0087                     	;# 
   170  0088                     	;# 
   171  0089                     	;# 
   172  008C                     	;# 
   173  008D                     	;# 
   174  008E                     	;# 
   175  008F                     	;# 
   176  0090                     	;# 
   177  0091                     	;# 
   178  0092                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0094                     	;# 
   183  0095                     	;# 
   184  0096                     	;# 
   185  0097                     	;# 
   186  0098                     	;# 
   187  0099                     	;# 
   188  009A                     	;# 
   189  009B                     	;# 
   190  009C                     	;# 
   191  009D                     	;# 
   192  009E                     	;# 
   193  009F                     	;# 
   194  0105                     	;# 
   195  0107                     	;# 
   196  0108                     	;# 
   197  0109                     	;# 
   198  010C                     	;# 
   199  010C                     	;# 
   200  010D                     	;# 
   201  010E                     	;# 
   202  010F                     	;# 
   203  0185                     	;# 
   204  0187                     	;# 
   205  0188                     	;# 
   206  0189                     	;# 
   207  018C                     	;# 
   208  018D                     	;# 
   209                           
   210                           	psect	idataBANK0
   211  00F6                     __pidataBANK0:	
   212                           
   213                           ;initializer for _DISPLAY2
   214  00F6  343F               	retlw	63
   215  00F7  3406               	retlw	6
   216  00F8  345B               	retlw	91
   217  00F9  344F               	retlw	79
   218  00FA  3466               	retlw	102
   219  00FB  346D               	retlw	109
   220  00FC  347D               	retlw	125
   221  00FD  3407               	retlw	7
   222  00FE  347F               	retlw	127
   223  00FF  346F               	retlw	111
   224  0100  3477               	retlw	119
   225  0101  347C               	retlw	124
   226  0102  3439               	retlw	57
   227  0103  345E               	retlw	94
   228  0104  3479               	retlw	121
   229  0105  3471               	retlw	113
   230                           
   231                           ;initializer for _DISPLAY1
   232  0106  343F               	retlw	63
   233  0107  3406               	retlw	6
   234  0108  345B               	retlw	91
   235  0109  344F               	retlw	79
   236  010A  3466               	retlw	102
   237  010B  346D               	retlw	109
   238  010C  347D               	retlw	125
   239  010D  3407               	retlw	7
   240  010E  347F               	retlw	127
   241  010F  346F               	retlw	111
   242  0110  3477               	retlw	119
   243  0111  347C               	retlw	124
   244  0112  3439               	retlw	57
   245  0113  345E               	retlw	94
   246  0114  3479               	retlw	121
   247  0115  3471               	retlw	113
   248  001E                     _ADRESH	set	30
   249  000B                     _INTCONbits	set	11
   250  001F                     _ADCON0bits	set	31
   251  0009                     _PORTE	set	9
   252  0008                     _PORTD	set	8
   253  0007                     _PORTC	set	7
   254  0006                     _PORTB	set	6
   255  0005                     _PORTA	set	5
   256  0001                     _TMR0	set	1
   257  0031                     _RB1	set	49
   258  0030                     _RB0	set	48
   259  0041                     _RD1	set	65
   260  0040                     _RD0	set	64
   261  0042                     _RD2	set	66
   262  005A                     _TMR0IF	set	90
   263  0081                     _OPTION_REGbits	set	129
   264  009F                     _ADCON1bits	set	159
   265  0089                     _TRISE	set	137
   266  0088                     _TRISD	set	136
   267  0087                     _TRISC	set	135
   268  0086                     _TRISB	set	134
   269  0085                     _TRISA	set	133
   270  008F                     _OSCCONbits	set	143
   271  0189                     _ANSELH	set	393
   272  0188                     _ANSEL	set	392
   273                           
   274                           ; #config settings
   275  0000                     
   276                           	psect	cinit
   277  000F                     start_initialization:	
   278  000F                     __initialization:	
   279                           
   280                           ; Initialize objects allocated to BANK0
   281  000F  1383               	bcf	3,7	;select IRP bank0
   282  0010  3040               	movlw	low (__pdataBANK0+32)
   283  0011  00FD               	movwf	btemp+-1
   284  0012  3000               	movlw	high __pidataBANK0
   285  0013  00FE               	movwf	btemp
   286  0014  30F6               	movlw	low __pidataBANK0
   287  0015  00FF               	movwf	btemp+1
   288  0016  3020               	movlw	low __pdataBANK0
   289  0017  0084               	movwf	4
   290  0018  120A  118A  2131  120A  118A  	fcall	init_ram0
   291                           
   292                           ; Clear objects allocated to COMMON
   293  001D  01F0               	clrf	__pbssCOMMON& (0+127)
   294  001E  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   295  001F  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   296  0020  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   297  0021  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   298  0022  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
   299  0023  01F6               	clrf	(__pbssCOMMON+6)& (0+127)
   300  0024  01F7               	clrf	(__pbssCOMMON+7)& (0+127)
   301  0025                     end_of_initialization:	
   302                           ;End of C runtime variable initialization code
   303                           
   304  0025                     __end_of__initialization:	
   305  0025  0183               	clrf	3
   306  0026  120A  118A  288F   	ljmp	_main	;jump to C main() function
   307                           
   308                           	psect	bssCOMMON
   309  0070                     __pbssCOMMON:	
   310  0070                     _ANTIREBOTEB:	
   311  0070                     	ds	1
   312  0071                     _ANTIREBOTEA:	
   313  0071                     	ds	1
   314  0072                     _ADC:	
   315  0072                     	ds	1
   316  0073                     _y:	
   317  0073                     	ds	1
   318  0074                     _x:	
   319  0074                     	ds	1
   320  0075                     _i:	
   321  0075                     	ds	1
   322  0076                     _z:	
   323  0076                     	ds	1
   324  0077                     _BANDERA:	
   325  0077                     	ds	1
   326                           
   327                           	psect	dataBANK0
   328  0020                     __pdataBANK0:	
   329  0020                     _DISPLAY2:	
   330  0020                     	ds	16
   331  0030                     _DISPLAY1:	
   332  0030                     	ds	16
   333                           
   334                           	psect	inittext
   335  012D                     init_fetch0:	
   336                           ;	Called with low address in FSR and high address in W
   337                           
   338  012D  087E               	movf	btemp,w
   339  012E  008A               	movwf	10
   340  012F  087F               	movf	btemp+1,w
   341  0130  0082               	movwf	2
   342  0131                     init_ram0:	
   343                           ;Called with:
   344                           ;	high address of idata address in btemp 
   345                           ;	low address of idata address in btemp+1 
   346                           ;	low address of data in FSR
   347                           ;	high address + 1 of data in btemp-1
   348                           
   349  0131  120A  118A  212D  120A  118A  	fcall	init_fetch0
   350  0136  0080               	movwf	0
   351  0137  0A84               	incf	4,f
   352  0138  0804               	movf	4,w
   353  0139  067D               	xorwf	btemp+-1,w
   354  013A  1903               	btfsc	3,2
   355  013B  3400               	retlw	0
   356  013C  0AFF               	incf	btemp+1,f
   357  013D  1903               	btfsc	3,2
   358  013E  0AFE               	incf	btemp,f
   359  013F  2931               	goto	init_ram0
   360                           
   361                           	psect	cstackCOMMON
   362  0078                     __pcstackCOMMON:	
   363  0078                     ?_TOGGLE:	
   364  0078                     ??_TOGGLE:	
   365                           ; 1 bytes @ 0x0
   366                           
   367  0078                     ?_analogico:	
   368                           ; 1 bytes @ 0x0
   369                           
   370  0078                     ?_NIBBLES:	
   371                           ; 1 bytes @ 0x0
   372                           
   373  0078                     ?_desplegar:	
   374                           ; 1 bytes @ 0x0
   375                           
   376  0078                     ?_ISR:	
   377                           ; 1 bytes @ 0x0
   378                           
   379  0078                     ??_ISR:	
   380                           ; 1 bytes @ 0x0
   381                           
   382  0078                     ?_main:	
   383                           ; 1 bytes @ 0x0
   384                           
   385                           
   386                           ; 1 bytes @ 0x0
   387  0078                     	ds	2
   388  007A                     ??_NIBBLES:	
   389  007A                     ??_desplegar:	
   390                           ; 1 bytes @ 0x2
   391                           
   392                           
   393                           ; 1 bytes @ 0x2
   394  007A                     	ds	2
   395  007C                     ??_analogico:	
   396                           
   397                           ; 1 bytes @ 0x4
   398  007C                     	ds	1
   399  007D                     ??_main:	
   400                           
   401                           	psect	maintext
   402  008F                     __pmaintext:	
   403                           ; 1 bytes @ 0x5
   404 ;;
   405 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   406 ;;
   407 ;; *************** function _main *****************
   408 ;; Defined at:
   409 ;;		line 72 in file "lab2.c"
   410 ;; Parameters:    Size  Location     Type
   411 ;;		None
   412 ;; Auto vars:     Size  Location     Type
   413 ;;		None
   414 ;; Return value:  Size  Location     Type
   415 ;;                  1    wreg      void 
   416 ;; Registers used:
   417 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   418 ;; Tracked objects:
   419 ;;		On entry : B00/0
   420 ;;		On exit  : 0/0
   421 ;;		Unchanged: 0/0
   422 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   423 ;;      Params:         0       0       0       0       0
   424 ;;      Locals:         0       0       0       0       0
   425 ;;      Temps:          0       0       0       0       0
   426 ;;      Totals:         0       0       0       0       0
   427 ;;Total ram usage:        0 bytes
   428 ;; Hardware stack levels required when called:    4
   429 ;; This function calls:
   430 ;;		_analogico
   431 ;; This function is called by:
   432 ;;		Startup code after reset
   433 ;; This function uses a non-reentrant model
   434 ;;
   435                           
   436                           
   437                           ;psect for function _main
   438  008F                     _main:	
   439  008F                     l807:	
   440                           ;incstack = 0
   441                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   442                           
   443                           
   444                           ;lab2.c: 76:     OSCCONbits.IRCF = 0b111;
   445  008F  3070               	movlw	112
   446  0090  1683               	bsf	3,5	;RP0=1, select bank1
   447  0091  1303               	bcf	3,6	;RP1=0, select bank1
   448  0092  048F               	iorwf	15,f	;volatile
   449  0093                     l809:	
   450                           
   451                           ;lab2.c: 77:     OSCCONbits.OSTS= 0;
   452  0093  118F               	bcf	15,3	;volatile
   453  0094                     l811:	
   454                           
   455                           ;lab2.c: 78:     OSCCONbits.HTS = 0;
   456  0094  110F               	bcf	15,2	;volatile
   457  0095                     l813:	
   458                           
   459                           ;lab2.c: 79:     OSCCONbits.LTS = 0;
   460  0095  108F               	bcf	15,1	;volatile
   461  0096                     l815:	
   462                           
   463                           ;lab2.c: 80:     OSCCONbits.SCS = 1;
   464  0096  140F               	bsf	15,0	;volatile
   465  0097                     l817:	
   466                           
   467                           ;lab2.c: 84:     ANSEL = 0b00000000;
   468  0097  1683               	bsf	3,5	;RP0=1, select bank3
   469  0098  1703               	bsf	3,6	;RP1=1, select bank3
   470  0099  0188               	clrf	8	;volatile
   471  009A                     l819:	
   472                           
   473                           ;lab2.c: 85:     ANSELH = 0b00100000;
   474  009A  3020               	movlw	32
   475  009B  0089               	movwf	9	;volatile
   476  009C                     l821:	
   477                           
   478                           ;lab2.c: 86:     TRISA = 0b00000000;
   479  009C  1683               	bsf	3,5	;RP0=1, select bank1
   480  009D  1303               	bcf	3,6	;RP1=0, select bank1
   481  009E  0185               	clrf	5	;volatile
   482  009F                     l823:	
   483                           
   484                           ;lab2.c: 87:     TRISB = 0b00100011;
   485  009F  3023               	movlw	35
   486  00A0  0086               	movwf	6	;volatile
   487  00A1                     l825:	
   488                           
   489                           ;lab2.c: 88:     TRISC = 0b00000000;
   490  00A1  0187               	clrf	7	;volatile
   491  00A2                     l827:	
   492                           
   493                           ;lab2.c: 89:     TRISD = 0b00000000;
   494  00A2  0188               	clrf	8	;volatile
   495  00A3                     l829:	
   496                           
   497                           ;lab2.c: 90:     TRISE = 0;
   498  00A3  0189               	clrf	9	;volatile
   499  00A4                     l831:	
   500                           
   501                           ;lab2.c: 91:     PORTA = 0;
   502  00A4  1283               	bcf	3,5	;RP0=0, select bank0
   503  00A5  1303               	bcf	3,6	;RP1=0, select bank0
   504  00A6  0185               	clrf	5	;volatile
   505  00A7                     l833:	
   506                           
   507                           ;lab2.c: 92:     PORTB = 0;
   508  00A7  0186               	clrf	6	;volatile
   509  00A8                     l835:	
   510                           
   511                           ;lab2.c: 93:     PORTC = 0;
   512  00A8  0187               	clrf	7	;volatile
   513  00A9                     l837:	
   514                           
   515                           ;lab2.c: 94:     PORTD = 0;
   516  00A9  0188               	clrf	8	;volatile
   517  00AA                     l839:	
   518                           
   519                           ;lab2.c: 95:     PORTE = 0;
   520  00AA  0189               	clrf	9	;volatile
   521  00AB                     l841:	
   522                           
   523                           ;lab2.c: 98:     ADCON0bits.ADCS0 = 1;
   524  00AB  171F               	bsf	31,6	;volatile
   525  00AC                     l843:	
   526                           
   527                           ;lab2.c: 99:     ADCON0bits.ADCS1 = 0;
   528  00AC  139F               	bcf	31,7	;volatile
   529  00AD                     l845:	
   530                           
   531                           ;lab2.c: 100:     ADCON0bits.CHS0 = 1;
   532  00AD  151F               	bsf	31,2	;volatile
   533  00AE                     l847:	
   534                           
   535                           ;lab2.c: 101:     ADCON0bits.CHS1 = 0;
   536  00AE  119F               	bcf	31,3	;volatile
   537  00AF                     l849:	
   538                           
   539                           ;lab2.c: 102:     ADCON0bits.CHS2 = 1;
   540  00AF  161F               	bsf	31,4	;volatile
   541  00B0                     l851:	
   542                           
   543                           ;lab2.c: 103:     ADCON0bits.CHS3 = 1;
   544  00B0  169F               	bsf	31,5	;volatile
   545  00B1                     l853:	
   546                           
   547                           ;lab2.c: 104:     ADCON0bits.ADON = 1;
   548  00B1  141F               	bsf	31,0	;volatile
   549  00B2                     l855:	
   550                           
   551                           ;lab2.c: 105:     ADCON1bits.ADFM = 0;
   552  00B2  1683               	bsf	3,5	;RP0=1, select bank1
   553  00B3  1303               	bcf	3,6	;RP1=0, select bank1
   554  00B4  139F               	bcf	31,7	;volatile
   555  00B5                     l857:	
   556                           
   557                           ;lab2.c: 106:     ADCON1bits.VCFG0 = 0;
   558  00B5  121F               	bcf	31,4	;volatile
   559  00B6                     l859:	
   560                           
   561                           ;lab2.c: 107:     ADCON1bits.VCFG1 = 0;
   562  00B6  129F               	bcf	31,5	;volatile
   563  00B7                     l861:	
   564                           
   565                           ;lab2.c: 110:     OPTION_REGbits.nRBPU = 1;
   566  00B7  1781               	bsf	1,7	;volatile
   567  00B8                     l863:	
   568                           
   569                           ;lab2.c: 111:     OPTION_REGbits.INTEDG = 0;
   570  00B8  1301               	bcf	1,6	;volatile
   571  00B9                     l865:	
   572                           
   573                           ;lab2.c: 112:     OPTION_REGbits.T0CS = 0;
   574  00B9  1281               	bcf	1,5	;volatile
   575  00BA                     l867:	
   576                           
   577                           ;lab2.c: 113:     OPTION_REGbits.T0SE = 0;
   578  00BA  1201               	bcf	1,4	;volatile
   579  00BB                     l869:	
   580                           
   581                           ;lab2.c: 114:     OPTION_REGbits.PSA = 0;
   582  00BB  1181               	bcf	1,3	;volatile
   583                           
   584                           ;lab2.c: 115:     OPTION_REGbits.PS = 0b000;
   585  00BC  30F8               	movlw	-8
   586  00BD  0581               	andwf	1,f	;volatile
   587  00BE                     l871:	
   588                           
   589                           ;lab2.c: 116:     TMR0 = 2;
   590  00BE  3002               	movlw	2
   591  00BF  1283               	bcf	3,5	;RP0=0, select bank0
   592  00C0  1303               	bcf	3,6	;RP1=0, select bank0
   593  00C1  0081               	movwf	1	;volatile
   594  00C2                     l873:	
   595                           
   596                           ;lab2.c: 119:     INTCONbits.GIE = 1;
   597  00C2  178B               	bsf	11,7	;volatile
   598  00C3                     l875:	
   599                           
   600                           ;lab2.c: 121:     INTCONbits.T0IE= 1;
   601  00C3  168B               	bsf	11,5	;volatile
   602  00C4                     l877:	
   603                           
   604                           ;lab2.c: 124:     INTCONbits.T0IF= 1;
   605  00C4  150B               	bsf	11,2	;volatile
   606  00C5                     l879:	
   607                           
   608                           ;lab2.c: 129:     i = 0;
   609  00C5  01F5               	clrf	_i
   610  00C6                     l881:	
   611                           
   612                           ;lab2.c: 130:     z = 0;
   613  00C6  01F6               	clrf	_z
   614  00C7                     l883:	
   615                           
   616                           ;lab2.c: 131:     RD2 = 0;
   617  00C7  1108               	bcf	8,2	;volatile
   618  00C8                     l885:	
   619                           
   620                           ;lab2.c: 132:     RD0 = 0;
   621  00C8  1008               	bcf	8,0	;volatile
   622  00C9                     l887:	
   623                           
   624                           ;lab2.c: 133:     RD1 = 0;
   625  00C9  1088               	bcf	8,1	;volatile
   626  00CA                     l889:	
   627                           
   628                           ;lab2.c: 134:     y=0;
   629  00CA  01F3               	clrf	_y
   630  00CB                     l891:	
   631                           
   632                           ;lab2.c: 135:     x=0;
   633  00CB  01F4               	clrf	_x
   634  00CC                     l893:	
   635                           
   636                           ;lab2.c: 136:     BANDERA = 0;
   637  00CC  01F7               	clrf	_BANDERA
   638  00CD                     l895:	
   639                           
   640                           ;lab2.c: 137:     analogico();
   641  00CD  120A  118A  2029  120A  118A  	fcall	_analogico
   642  00D2                     l91:	
   643  00D2  120A  118A  280C   	ljmp	start
   644  00D5                     __end_of_main:	
   645                           
   646                           	psect	text1
   647  0029                     __ptext1:	
   648 ;; *************** function _analogico *****************
   649 ;; Defined at:
   650 ;;		line 141 in file "lab2.c"
   651 ;; Parameters:    Size  Location     Type
   652 ;;		None
   653 ;; Auto vars:     Size  Location     Type
   654 ;;		None
   655 ;; Return value:  Size  Location     Type
   656 ;;                  1    wreg      void 
   657 ;; Registers used:
   658 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   659 ;; Tracked objects:
   660 ;;		On entry : 0/0
   661 ;;		On exit  : 0/0
   662 ;;		Unchanged: 0/0
   663 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   664 ;;      Params:         0       0       0       0       0
   665 ;;      Locals:         0       0       0       0       0
   666 ;;      Temps:          1       0       0       0       0
   667 ;;      Totals:         1       0       0       0       0
   668 ;;Total ram usage:        1 bytes
   669 ;; Hardware stack levels used:    1
   670 ;; Hardware stack levels required when called:    3
   671 ;; This function calls:
   672 ;;		_NIBBLES
   673 ;;		_desplegar
   674 ;; This function is called by:
   675 ;;		_main
   676 ;; This function uses a non-reentrant model
   677 ;;
   678                           
   679                           
   680                           ;psect for function _analogico
   681  0029                     _analogico:	
   682  0029                     l94:	
   683                           ;incstack = 0
   684                           ; Regs used in _analogico: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   685                           ;lab2.c: 142:         while(1){
   686                           
   687  0029                     l749:	
   688                           
   689                           ;lab2.c: 145:             if (z>=i){
   690  0029  0875               	movf	_i,w
   691  002A  0276               	subwf	_z,w
   692  002B  1C03               	skipc
   693  002C  282E               	goto	u51
   694  002D  282F               	goto	u50
   695  002E                     u51:	
   696  002E  2832               	goto	l753
   697  002F                     u50:	
   698  002F                     l751:	
   699                           
   700                           ;lab2.c: 146:                 RD2 = 1;
   701  002F  1283               	bcf	3,5	;RP0=0, select bank0
   702  0030  1303               	bcf	3,6	;RP1=0, select bank0
   703  0031  1508               	bsf	8,2	;volatile
   704  0032                     l753:	
   705                           
   706                           ;lab2.c: 148:             if (z<i){
   707  0032  0875               	movf	_i,w
   708  0033  0276               	subwf	_z,w
   709  0034  1803               	skipnc
   710  0035  2837               	goto	u61
   711  0036  2838               	goto	u60
   712  0037                     u61:	
   713  0037  283B               	goto	l757
   714  0038                     u60:	
   715  0038                     l755:	
   716                           
   717                           ;lab2.c: 149:                 RD2 = 0;
   718  0038  1283               	bcf	3,5	;RP0=0, select bank0
   719  0039  1303               	bcf	3,6	;RP1=0, select bank0
   720  003A  1108               	bcf	8,2	;volatile
   721  003B                     l757:	
   722                           
   723                           ;lab2.c: 151:         _delay((unsigned long)((1)*(4000000/4000.0)));
   724  003B  30C7               	movlw	199
   725  003C  00FC               	movwf	??_analogico
   726  003D                     u157:	
   727  003D  283E               	nop2
   728  003E  0BFC               	decfsz	??_analogico,f
   729  003F  283D               	goto	u157
   730  0040  2841               	nop2
   731  0041  2842               	nop2
   732  0042                     l759:	
   733                           
   734                           ;lab2.c: 152:         if(ADCON0bits.GO_DONE == 0){
   735  0042  1283               	bcf	3,5	;RP0=0, select bank0
   736  0043  1303               	bcf	3,6	;RP1=0, select bank0
   737  0044  189F               	btfsc	31,1	;volatile
   738  0045  2847               	goto	u71
   739  0046  2848               	goto	u70
   740  0047                     u71:	
   741  0047  2849               	goto	l97
   742  0048                     u70:	
   743  0048                     l761:	
   744                           
   745                           ;lab2.c: 153:             ADCON0bits.GO_DONE = 1;
   746  0048  149F               	bsf	31,1	;volatile
   747  0049                     l97:	
   748                           ;lab2.c: 154:         }
   749                           
   750                           
   751                           ;lab2.c: 157:        if (RB0 == 1){
   752  0049  1C06               	btfss	6,0	;volatile
   753  004A  284C               	goto	u81
   754  004B  284D               	goto	u80
   755  004C                     u81:	
   756  004C  284F               	goto	l98
   757  004D                     u80:	
   758  004D                     l763:	
   759                           
   760                           ;lab2.c: 158:            ANTIREBOTEA = 1;
   761  004D  01F1               	clrf	_ANTIREBOTEA
   762  004E  0AF1               	incf	_ANTIREBOTEA,f
   763  004F                     l98:	
   764                           ;lab2.c: 159:        }
   765                           
   766                           
   767                           ;lab2.c: 160:         if(RB0 == 0 && ANTIREBOTEA ==1 ){
   768  004F  1806               	btfsc	6,0	;volatile
   769  0050  2852               	goto	u91
   770  0051  2853               	goto	u90
   771  0052                     u91:	
   772  0052  2861               	goto	l773
   773  0053                     u90:	
   774  0053                     l765:	
   775  0053  0371               	decf	_ANTIREBOTEA,w
   776  0054  1D03               	btfss	3,2
   777  0055  2857               	goto	u101
   778  0056  2858               	goto	u100
   779  0057                     u101:	
   780  0057  2861               	goto	l773
   781  0058                     u100:	
   782  0058                     l767:	
   783                           
   784                           ;lab2.c: 161:             ANTIREBOTEA = 0;
   785  0058  01F1               	clrf	_ANTIREBOTEA
   786  0059                     l769:	
   787                           
   788                           ;lab2.c: 163:             ADC++;
   789  0059  3001               	movlw	1
   790  005A  00FC               	movwf	??_analogico
   791  005B  087C               	movf	??_analogico,w
   792  005C  07F2               	addwf	_ADC,f
   793  005D                     l771:	
   794                           
   795                           ;lab2.c: 165:             i = ADC;
   796  005D  0872               	movf	_ADC,w
   797  005E  00FC               	movwf	??_analogico
   798  005F  087C               	movf	??_analogico,w
   799  0060  00F5               	movwf	_i
   800  0061                     l773:	
   801                           
   802                           ;lab2.c: 171:        if(RB1 == 1 ){
   803  0061  1C86               	btfss	6,1	;volatile
   804  0062  2864               	goto	u111
   805  0063  2865               	goto	u110
   806  0064                     u111:	
   807  0064  2867               	goto	l100
   808  0065                     u110:	
   809  0065                     l775:	
   810                           
   811                           ;lab2.c: 172:             ANTIREBOTEB= 1;
   812  0065  01F0               	clrf	_ANTIREBOTEB
   813  0066  0AF0               	incf	_ANTIREBOTEB,f
   814  0067                     l100:	
   815                           ;lab2.c: 173:         }
   816                           
   817                           
   818                           ;lab2.c: 174:        if(RB1 == 0 && ANTIREBOTEB ==1){
   819  0067  1886               	btfsc	6,1	;volatile
   820  0068  286A               	goto	u121
   821  0069  286B               	goto	u120
   822  006A                     u121:	
   823  006A  2877               	goto	l785
   824  006B                     u120:	
   825  006B                     l777:	
   826  006B  0370               	decf	_ANTIREBOTEB,w
   827  006C  1D03               	btfss	3,2
   828  006D  286F               	goto	u131
   829  006E  2870               	goto	u130
   830  006F                     u131:	
   831  006F  2877               	goto	l785
   832  0070                     u130:	
   833  0070                     l779:	
   834                           
   835                           ;lab2.c: 175:             ANTIREBOTEB= 0;
   836  0070  01F0               	clrf	_ANTIREBOTEB
   837  0071                     l781:	
   838                           
   839                           ;lab2.c: 176:             ADC--;
   840  0071  3001               	movlw	1
   841  0072  02F2               	subwf	_ADC,f
   842  0073                     l783:	
   843                           
   844                           ;lab2.c: 178:             i = ADC;
   845  0073  0872               	movf	_ADC,w
   846  0074  00FC               	movwf	??_analogico
   847  0075  087C               	movf	??_analogico,w
   848  0076  00F5               	movwf	_i
   849  0077                     l785:	
   850                           
   851                           ;lab2.c: 186:         z = ADRESH;
   852  0077  081E               	movf	30,w	;volatile
   853  0078  00FC               	movwf	??_analogico
   854  0079  087C               	movf	??_analogico,w
   855  007A  00F6               	movwf	_z
   856  007B                     l787:	
   857                           
   858                           ;lab2.c: 187:         x= ADRESH;
   859  007B  081E               	movf	30,w	;volatile
   860  007C  00FC               	movwf	??_analogico
   861  007D  087C               	movf	??_analogico,w
   862  007E  00F4               	movwf	_x
   863  007F                     l789:	
   864                           
   865                           ;lab2.c: 188:         y = ADRESH;
   866  007F  081E               	movf	30,w	;volatile
   867  0080  00FC               	movwf	??_analogico
   868  0081  087C               	movf	??_analogico,w
   869  0082  00F3               	movwf	_y
   870  0083                     l791:	
   871                           
   872                           ;lab2.c: 189:         NIBBLES();
   873  0083  120A  118A  2140  120A  118A  	fcall	_NIBBLES
   874  0088                     l793:	
   875                           
   876                           ;lab2.c: 192:        desplegar();
   877  0088  120A  118A  20D5  120A  118A  	fcall	_desplegar
   878  008D  2829               	goto	l94
   879  008E  0008               	return
   880  008F                     __end_of_analogico:	
   881                           
   882                           	psect	text2
   883  00D5                     __ptext2:	
   884 ;; *************** function _desplegar *****************
   885 ;; Defined at:
   886 ;;		line 198 in file "lab2.c"
   887 ;; Parameters:    Size  Location     Type
   888 ;;		None
   889 ;; Auto vars:     Size  Location     Type
   890 ;;		None
   891 ;; Return value:  Size  Location     Type
   892 ;;                  1    wreg      void 
   893 ;; Registers used:
   894 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   895 ;; Tracked objects:
   896 ;;		On entry : 0/0
   897 ;;		On exit  : 0/0
   898 ;;		Unchanged: 0/0
   899 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   900 ;;      Params:         0       0       0       0       0
   901 ;;      Locals:         0       0       0       0       0
   902 ;;      Temps:          0       0       0       0       0
   903 ;;      Totals:         0       0       0       0       0
   904 ;;Total ram usage:        0 bytes
   905 ;; Hardware stack levels used:    1
   906 ;; Hardware stack levels required when called:    2
   907 ;; This function calls:
   908 ;;		Nothing
   909 ;; This function is called by:
   910 ;;		_analogico
   911 ;; This function uses a non-reentrant model
   912 ;;
   913                           
   914                           
   915                           ;psect for function _desplegar
   916  00D5                     _desplegar:	
   917  00D5                     l715:	
   918                           ;incstack = 0
   919                           ; Regs used in _desplegar: [wreg-fsr0h+status,2+status,0]
   920                           
   921                           
   922                           ;lab2.c: 199:        PORTC = 0;
   923  00D5  1283               	bcf	3,5	;RP0=0, select bank0
   924  00D6  1303               	bcf	3,6	;RP1=0, select bank0
   925  00D7  0187               	clrf	7	;volatile
   926  00D8                     l717:	
   927                           
   928                           ;lab2.c: 200:         RD0 = 0;
   929  00D8  1008               	bcf	8,0	;volatile
   930  00D9                     l719:	
   931                           
   932                           ;lab2.c: 201:         RD1 = 0;
   933  00D9  1088               	bcf	8,1	;volatile
   934  00DA                     l721:	
   935                           
   936                           ;lab2.c: 202:         if(BANDERA ==1){
   937  00DA  0377               	decf	_BANDERA,w
   938  00DB  1D03               	btfss	3,2
   939  00DC  28DE               	goto	u21
   940  00DD  28DF               	goto	u20
   941  00DE                     u21:	
   942  00DE  28E8               	goto	l731
   943  00DF                     u20:	
   944  00DF                     l723:	
   945                           
   946                           ;lab2.c: 203:             PORTC = DISPLAY1[x];
   947  00DF  0874               	movf	_x,w
   948  00E0  3E30               	addlw	(low (_DISPLAY1| 0))& (0+255)
   949  00E1  0084               	movwf	4
   950  00E2  1383               	bcf	3,7	;select IRP bank0
   951  00E3  0800               	movf	0,w
   952  00E4  0087               	movwf	7	;volatile
   953  00E5                     l725:	
   954                           
   955                           ;lab2.c: 204:             RD0 = 1;
   956  00E5  1408               	bsf	8,0	;volatile
   957  00E6                     l727:	
   958                           
   959                           ;lab2.c: 205:             RD1=0;
   960  00E6  1088               	bcf	8,1	;volatile
   961  00E7  28F5               	goto	l108
   962  00E8                     l731:	
   963                           
   964                           ;lab2.c: 209:         if(BANDERA == 0){
   965  00E8  0877               	movf	_BANDERA,w
   966  00E9  1D03               	btfss	3,2
   967  00EA  28EC               	goto	u31
   968  00EB  28ED               	goto	u30
   969  00EC                     u31:	
   970  00EC  28F5               	goto	l108
   971  00ED                     u30:	
   972  00ED                     l733:	
   973                           
   974                           ;lab2.c: 211:             PORTC = DISPLAY2[y];
   975  00ED  0873               	movf	_y,w
   976  00EE  3E20               	addlw	(low (_DISPLAY2| 0))& (0+255)
   977  00EF  0084               	movwf	4
   978  00F0  1383               	bcf	3,7	;select IRP bank0
   979  00F1  0800               	movf	0,w
   980  00F2  0087               	movwf	7	;volatile
   981  00F3                     l735:	
   982                           
   983                           ;lab2.c: 212:             RD1 = 1;
   984  00F3  1488               	bsf	8,1	;volatile
   985  00F4                     l737:	
   986                           
   987                           ;lab2.c: 213:             RD0 = 0;
   988  00F4  1008               	bcf	8,0	;volatile
   989  00F5                     l108:	
   990  00F5  0008               	return
   991  00F6                     __end_of_desplegar:	
   992                           
   993                           	psect	text3
   994  0140                     __ptext3:	
   995 ;; *************** function _NIBBLES *****************
   996 ;; Defined at:
   997 ;;		line 221 in file "lab2.c"
   998 ;; Parameters:    Size  Location     Type
   999 ;;		None
  1000 ;; Auto vars:     Size  Location     Type
  1001 ;;		None
  1002 ;; Return value:  Size  Location     Type
  1003 ;;                  1    wreg      void 
  1004 ;; Registers used:
  1005 ;;		wreg, status,2, status,0
  1006 ;; Tracked objects:
  1007 ;;		On entry : 0/0
  1008 ;;		On exit  : 0/0
  1009 ;;		Unchanged: 0/0
  1010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1011 ;;      Params:         0       0       0       0       0
  1012 ;;      Locals:         0       0       0       0       0
  1013 ;;      Temps:          2       0       0       0       0
  1014 ;;      Totals:         2       0       0       0       0
  1015 ;;Total ram usage:        2 bytes
  1016 ;; Hardware stack levels used:    1
  1017 ;; Hardware stack levels required when called:    2
  1018 ;; This function calls:
  1019 ;;		Nothing
  1020 ;; This function is called by:
  1021 ;;		_analogico
  1022 ;; This function uses a non-reentrant model
  1023 ;;
  1024                           
  1025                           
  1026                           ;psect for function _NIBBLES
  1027  0140                     _NIBBLES:	
  1028  0140                     l709:	
  1029                           ;incstack = 0
  1030                           ; Regs used in _NIBBLES: [wreg+status,2+status,0]
  1031                           
  1032                           
  1033                           ;lab2.c: 222:         x = x & 0x0F;
  1034  0140  0874               	movf	_x,w
  1035  0141  390F               	andlw	15
  1036  0142  00FA               	movwf	??_NIBBLES
  1037  0143  087A               	movf	??_NIBBLES,w
  1038  0144  00F4               	movwf	_x
  1039  0145                     l711:	
  1040                           
  1041                           ;lab2.c: 223:         y = ((y & 0xF0)>>4);
  1042  0145  0873               	movf	_y,w
  1043  0146  00FA               	movwf	??_NIBBLES
  1044  0147  3004               	movlw	4
  1045  0148                     u15:	
  1046  0148  1003               	clrc
  1047  0149  0CFA               	rrf	??_NIBBLES,f
  1048  014A  3EFF               	addlw	-1
  1049  014B  1D03               	skipz
  1050  014C  2948               	goto	u15
  1051  014D  087A               	movf	??_NIBBLES,w
  1052  014E  390F               	andlw	15
  1053  014F  00FB               	movwf	??_NIBBLES+1
  1054  0150  087B               	movf	??_NIBBLES+1,w
  1055  0151  00F3               	movwf	_y
  1056  0152                     l112:	
  1057  0152  0008               	return
  1058  0153                     __end_of_NIBBLES:	
  1059                           
  1060                           	psect	text4
  1061  0116                     __ptext4:	
  1062 ;; *************** function _ISR *****************
  1063 ;; Defined at:
  1064 ;;		line 60 in file "lab2.c"
  1065 ;; Parameters:    Size  Location     Type
  1066 ;;		None
  1067 ;; Auto vars:     Size  Location     Type
  1068 ;;		None
  1069 ;; Return value:  Size  Location     Type
  1070 ;;                  1    wreg      void 
  1071 ;; Registers used:
  1072 ;;		wreg, status,2, status,0, pclath, cstack
  1073 ;; Tracked objects:
  1074 ;;		On entry : 0/0
  1075 ;;		On exit  : 0/0
  1076 ;;		Unchanged: 0/0
  1077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1078 ;;      Params:         0       0       0       0       0
  1079 ;;      Locals:         0       0       0       0       0
  1080 ;;      Temps:          2       0       0       0       0
  1081 ;;      Totals:         2       0       0       0       0
  1082 ;;Total ram usage:        2 bytes
  1083 ;; Hardware stack levels used:    1
  1084 ;; Hardware stack levels required when called:    1
  1085 ;; This function calls:
  1086 ;;		_TOGGLE
  1087 ;; This function is called by:
  1088 ;;		Interrupt level 1
  1089 ;; This function uses a non-reentrant model
  1090 ;;
  1091                           
  1092                           
  1093                           ;psect for function _ISR
  1094  0116                     _ISR:	
  1095  0116                     i1l795:	
  1096                           
  1097                           ;lab2.c: 62:     if (TMR0IF==1){
  1098  0116  1D0B               	btfss	11,2	;volatile
  1099  0117  2919               	goto	u14_21
  1100  0118  291A               	goto	u14_20
  1101  0119                     u14_21:	
  1102  0119  2926               	goto	i1l86
  1103  011A                     u14_20:	
  1104  011A                     i1l797:	
  1105                           
  1106                           ;lab2.c: 63:         TOGGLE();
  1107  011A  120A  118A  2153  120A  118A  	fcall	_TOGGLE
  1108  011F                     i1l799:	
  1109                           
  1110                           ;lab2.c: 64:         TMR0IF=0;
  1111  011F  110B               	bcf	11,2	;volatile
  1112  0120                     i1l801:	
  1113                           
  1114                           ;lab2.c: 65:         TMR0= 2;
  1115  0120  3002               	movlw	2
  1116  0121  1283               	bcf	3,5	;RP0=0, select bank0
  1117  0122  1303               	bcf	3,6	;RP1=0, select bank0
  1118  0123  0081               	movwf	1	;volatile
  1119  0124                     i1l803:	
  1120                           
  1121                           ;lab2.c: 66:         PORTA = i;
  1122  0124  0875               	movf	_i,w
  1123  0125  0085               	movwf	5	;volatile
  1124  0126                     i1l86:	
  1125  0126  0879               	movf	??_ISR+1,w
  1126  0127  008A               	movwf	10
  1127  0128  0E78               	swapf	??_ISR^(0+4294967168),w
  1128  0129  0083               	movwf	3
  1129  012A  0EFE               	swapf	btemp,f
  1130  012B  0E7E               	swapf	btemp,w
  1131  012C  0009               	retfie
  1132  012D                     __end_of_ISR:	
  1133                           
  1134                           	psect	intentry
  1135  0004                     __pintentry:	
  1136                           ;incstack = 0
  1137                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  1138                           
  1139  0004                     interrupt_function:	
  1140  007E                     saved_w	set	btemp
  1141  0004  00FE               	movwf	btemp
  1142  0005  0E03               	swapf	3,w
  1143  0006  00F8               	movwf	??_ISR
  1144  0007  080A               	movf	10,w
  1145  0008  00F9               	movwf	??_ISR+1
  1146  0009  120A  118A  2916   	ljmp	_ISR
  1147                           
  1148                           	psect	text5
  1149  0153                     __ptext5:	
  1150 ;; *************** function _TOGGLE *****************
  1151 ;; Defined at:
  1152 ;;		line 229 in file "lab2.c"
  1153 ;; Parameters:    Size  Location     Type
  1154 ;;		None
  1155 ;; Auto vars:     Size  Location     Type
  1156 ;;		None
  1157 ;; Return value:  Size  Location     Type
  1158 ;;                  1    wreg      void 
  1159 ;; Registers used:
  1160 ;;		wreg, status,2, status,0
  1161 ;; Tracked objects:
  1162 ;;		On entry : 0/0
  1163 ;;		On exit  : 0/0
  1164 ;;		Unchanged: 0/0
  1165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1166 ;;      Params:         0       0       0       0       0
  1167 ;;      Locals:         0       0       0       0       0
  1168 ;;      Temps:          0       0       0       0       0
  1169 ;;      Totals:         0       0       0       0       0
  1170 ;;Total ram usage:        0 bytes
  1171 ;; Hardware stack levels used:    1
  1172 ;; This function calls:
  1173 ;;		Nothing
  1174 ;; This function is called by:
  1175 ;;		_ISR
  1176 ;; This function uses a non-reentrant model
  1177 ;;
  1178                           
  1179                           
  1180                           ;psect for function _TOGGLE
  1181  0153                     _TOGGLE:	
  1182  0153                     i1l741:	
  1183                           ;incstack = 0
  1184                           ; Regs used in _TOGGLE: [wreg+status,2+status,0]
  1185                           
  1186                           
  1187                           ;lab2.c: 230:         if(BANDERA==1){
  1188  0153  0377               	decf	_BANDERA,w
  1189  0154  1D03               	btfss	3,2
  1190  0155  2957               	goto	u4_21
  1191  0156  2958               	goto	u4_20
  1192  0157                     u4_21:	
  1193  0157  295A               	goto	i1l115
  1194  0158                     u4_20:	
  1195  0158                     i1l743:	
  1196                           
  1197                           ;lab2.c: 231:             BANDERA =0;
  1198  0158  01F7               	clrf	_BANDERA
  1199  0159  295C               	goto	i1l116
  1200  015A                     i1l115:	
  1201                           ;lab2.c: 234:         else{
  1202                           
  1203                           
  1204                           ;lab2.c: 235:             BANDERA = 1;
  1205  015A  01F7               	clrf	_BANDERA
  1206  015B  0AF7               	incf	_BANDERA,f
  1207  015C                     i1l116:	
  1208                           ;lab2.c: 236:             return;
  1209                           
  1210  015C  0008               	return
  1211  015D                     __end_of_TOGGLE:	
  1212  007E                     btemp	set	126	;btemp
  1213  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        32
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      13
    BANK0            80      0      32
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_analogico
    _analogico->_NIBBLES

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                          _analogico
 ---------------------------------------------------------------------------------
 (1) _analogico                                            1     1      0       0
                                              4 COMMON     1     1      0
                            _NIBBLES
                          _desplegar
 ---------------------------------------------------------------------------------
 (2) _desplegar                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _NIBBLES                                              2     2      0       0
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
                             _TOGGLE
 ---------------------------------------------------------------------------------
 (4) _TOGGLE                                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _analogico
     _NIBBLES
     _desplegar

 _ISR (ROOT)
   _TOGGLE

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0      20       5       40.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      5       D       1       92.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      2D      12        0.0%
ABS                  0      0      2D       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sun Feb 02 23:28:36 2020

                       _i 0075                         _x 0074                         _y 0073  
                       _z 0076                         pc 0002               __CFG_CP$OFF 0000  
                      l91 00D2                        l94 0029                        l97 0049  
                      l98 004F                        u20 00DF                        u21 00DE  
                      u30 00ED                        u15 0148                        u31 00EC  
                      u50 002F                        u51 002E                        u60 0038  
                      u61 0037                        u70 0048                        u71 0047  
                      u80 004D                        u81 004C                        u90 0053  
                      u91 0052                        fsr 0004                       l100 0067  
                     l112 0152                       l108 00F5                       _ADC 0072  
                     l711 0145                       l721 00DA                       l723 00DF  
                     l731 00E8                       l715 00D5                       l811 0094  
                     l709 0140                       l733 00ED                       l725 00E5  
                     l717 00D8                       l821 009C                       l813 0095  
                     l735 00F3                       l727 00E6                       l719 00D9  
                     l751 002F                       l831 00A4                       l823 009F  
                     l815 0096                       l807 008F                       l737 00F4  
                     l761 0048                       l753 0032                       l841 00AB  
                     l833 00A7                       l825 00A1                       l817 0097  
                     l809 0093                       l771 005D                       l763 004D  
                     l755 0038                       l851 00B0                       l843 00AC  
                     l835 00A8                       l827 00A2                       l819 009A  
                     l781 0071                       l765 0053                       l773 0061  
                     l757 003B                       l749 0029                       l861 00B7  
                     l853 00B1                       l845 00AD                       l837 00A9  
                     l829 00A3                       l791 0083                       l783 0073  
                     l775 0065                       l767 0058                       l759 0042  
                     l871 00BE                       l863 00B8                       l855 00B2  
                     l847 00AE                       l839 00AA                       l793 0088  
                     l777 006B                       l785 0077                       l769 0059  
                     l881 00C6                       l873 00C2                       l865 00B9  
                     l857 00B5                       l849 00AF                       l787 007B  
                     l779 0070                       l891 00CB                       l883 00C7  
                     l875 00C3                       l867 00BA                       l859 00B6  
                     l789 007F                       l893 00CC                       l885 00C8  
                     l877 00C4                       l869 00BB                       l895 00CD  
                     l887 00C9                       l879 00C5                       l889 00CA  
                     _RB0 0030                       _RB1 0031                       _RD0 0040  
                     _RD1 0041                       _RD2 0042                       u100 0058  
                     u101 0057                       u110 0065                       u111 0064  
                     u120 006B                       u121 006A                       u130 0070  
                     u131 006F                       u157 003D              __CFG_CPD$OFF 0000  
                     _ISR 0116                       fsr0 0004                       indf 0000  
         __end_of_NIBBLES 0153              __CFG_LVP$OFF 0000                      ?_ISR 0078  
                    i1l86 0126                      _TMR0 0001                      u4_20 0158  
                    u4_21 0157              __CFG_WRT$OFF 0000                      _main 008F  
                    btemp 007E                      start 000C             __CFG_IESO$OFF 0000  
                   ??_ISR 0078                     ?_main 0078             __CFG_WDTE$OFF 0000  
                   _ANSEL 0188                     i1l115 015A                     i1l116 015C  
                   i1l801 0120                     i1l803 0124                     i1l741 0153  
                   i1l743 0158                     i1l795 0116                     i1l797 011A  
                   i1l799 011F                     u14_20 011A                     u14_21 0119  
                   _PORTA 0005                     _PORTB 0006                     _PORTC 0007  
                   _PORTD 0008                     _PORTE 0009                     _TRISA 0085  
                   _TRISB 0086                     _TRISC 0087                     _TRISD 0088  
                   _TRISE 0089            __CFG_FCMEN$OFF 0000            __CFG_BOREN$OFF 0000  
                   pclath 000A                     status 0003                     wtemp0 007E  
          __CFG_MCLRE$OFF 0000           __initialization 000F              __end_of_main 00D5  
                  ??_main 007D                 ??_NIBBLES 007A                    _ADRESH 001E  
                  _ANSELH 0189                    _TMR0IF 005A                    _TOGGLE 0153  
          __CFG_PWRTE$OFF 0000                    saved_w 007E   __end_of__initialization 0025  
          __pcstackCOMMON 0078              __pidataBANK0 00F6        __size_of_analogico 0066  
          _OPTION_REGbits 0081        __size_of_desplegar 0021                   ?_TOGGLE 0078  
              __pmaintext 008F                __pintentry 0004                   _BANDERA 0077  
                 _NIBBLES 0140         __end_of_analogico 008F           __size_of_TOGGLE 000A  
       __end_of_desplegar 00F6                   __ptext1 0029                   __ptext2 00D5  
                 __ptext3 0140                   __ptext4 0116                   __ptext5 0153  
            __size_of_ISR 0017      end_of_initialization 0025            __end_of_TOGGLE 015D  
     start_initialization 000F               __end_of_ISR 012D                  ??_TOGGLE 0078  
__CFG_FOSC$INTRC_NOCLKOUT 0000                init_fetch0 012D               __pdataBANK0 0020  
                ?_NIBBLES 0078               __pbssCOMMON 0070                 ___latbits 0002  
             _ANTIREBOTEA 0071               _ANTIREBOTEB 0070                 _analogico 0029  
               _desplegar 00D5                  _DISPLAY1 0030                  _DISPLAY2 0020  
       interrupt_function 0004                ?_analogico 0078                ?_desplegar 0078  
              _ADCON0bits 001F                _ADCON1bits 009F          __size_of_NIBBLES 0013  
       __CFG_BOR4V$BOR40V 0000             __size_of_main 0046               ??_analogico 007C  
             ??_desplegar 007A                _INTCONbits 000B                  init_ram0 0131  
                intlevel1 0000                _OSCCONbits 008F  
