

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sun Feb 02 01:51:24 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	intentry,global,class=CODE,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 2.10
    20                           ; Generated 31/07/2019 GMT
    21                           ; 
    22                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F887 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0007                     	;# 
    61  0008                     	;# 
    62  0009                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  000D                     	;# 
    67  000E                     	;# 
    68  000E                     	;# 
    69  000F                     	;# 
    70  0010                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0013                     	;# 
    74  0014                     	;# 
    75  0015                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0017                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001B                     	;# 
    83  001B                     	;# 
    84  001C                     	;# 
    85  001D                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  0081                     	;# 
    89  0085                     	;# 
    90  0086                     	;# 
    91  0087                     	;# 
    92  0088                     	;# 
    93  0089                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  008E                     	;# 
    97  008F                     	;# 
    98  0090                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0094                     	;# 
   105  0095                     	;# 
   106  0096                     	;# 
   107  0097                     	;# 
   108  0098                     	;# 
   109  0099                     	;# 
   110  009A                     	;# 
   111  009B                     	;# 
   112  009C                     	;# 
   113  009D                     	;# 
   114  009E                     	;# 
   115  009F                     	;# 
   116  0105                     	;# 
   117  0107                     	;# 
   118  0108                     	;# 
   119  0109                     	;# 
   120  010C                     	;# 
   121  010C                     	;# 
   122  010D                     	;# 
   123  010E                     	;# 
   124  010F                     	;# 
   125  0185                     	;# 
   126  0187                     	;# 
   127  0188                     	;# 
   128  0189                     	;# 
   129  018C                     	;# 
   130  018D                     	;# 
   131  0000                     	;# 
   132  0001                     	;# 
   133  0002                     	;# 
   134  0003                     	;# 
   135  0004                     	;# 
   136  0005                     	;# 
   137  0006                     	;# 
   138  0007                     	;# 
   139  0008                     	;# 
   140  0009                     	;# 
   141  000A                     	;# 
   142  000B                     	;# 
   143  000C                     	;# 
   144  000D                     	;# 
   145  000E                     	;# 
   146  000E                     	;# 
   147  000F                     	;# 
   148  0010                     	;# 
   149  0011                     	;# 
   150  0012                     	;# 
   151  0013                     	;# 
   152  0014                     	;# 
   153  0015                     	;# 
   154  0015                     	;# 
   155  0016                     	;# 
   156  0017                     	;# 
   157  0018                     	;# 
   158  0019                     	;# 
   159  001A                     	;# 
   160  001B                     	;# 
   161  001B                     	;# 
   162  001C                     	;# 
   163  001D                     	;# 
   164  001E                     	;# 
   165  001F                     	;# 
   166  0081                     	;# 
   167  0085                     	;# 
   168  0086                     	;# 
   169  0087                     	;# 
   170  0088                     	;# 
   171  0089                     	;# 
   172  008C                     	;# 
   173  008D                     	;# 
   174  008E                     	;# 
   175  008F                     	;# 
   176  0090                     	;# 
   177  0091                     	;# 
   178  0092                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0094                     	;# 
   183  0095                     	;# 
   184  0096                     	;# 
   185  0097                     	;# 
   186  0098                     	;# 
   187  0099                     	;# 
   188  009A                     	;# 
   189  009B                     	;# 
   190  009C                     	;# 
   191  009D                     	;# 
   192  009E                     	;# 
   193  009F                     	;# 
   194  0105                     	;# 
   195  0107                     	;# 
   196  0108                     	;# 
   197  0109                     	;# 
   198  010C                     	;# 
   199  010C                     	;# 
   200  010D                     	;# 
   201  010E                     	;# 
   202  010F                     	;# 
   203  0185                     	;# 
   204  0187                     	;# 
   205  0188                     	;# 
   206  0189                     	;# 
   207  018C                     	;# 
   208  018D                     	;# 
   209                           
   210                           	psect	idataBANK0
   211  00AE                     __pidataBANK0:	
   212                           
   213                           ;initializer for _DISPLAY2
   214  00AE  343F               	retlw	63
   215  00AF  3406               	retlw	6
   216  00B0  345B               	retlw	91
   217  00B1  344F               	retlw	79
   218  00B2  3466               	retlw	102
   219  00B3  346D               	retlw	109
   220  00B4  347D               	retlw	125
   221  00B5  3407               	retlw	7
   222  00B6  347F               	retlw	127
   223  00B7  346F               	retlw	111
   224  00B8  3477               	retlw	119
   225  00B9  347C               	retlw	124
   226  00BA  3439               	retlw	57
   227  00BB  345E               	retlw	94
   228  00BC  3479               	retlw	121
   229  00BD  3471               	retlw	113
   230                           
   231                           ;initializer for _DISPLAY1
   232  00BE  343F               	retlw	63
   233  00BF  3406               	retlw	6
   234  00C0  345B               	retlw	91
   235  00C1  344F               	retlw	79
   236  00C2  3466               	retlw	102
   237  00C3  346D               	retlw	109
   238  00C4  347D               	retlw	125
   239  00C5  3407               	retlw	7
   240  00C6  347F               	retlw	127
   241  00C7  346F               	retlw	111
   242  00C8  3477               	retlw	119
   243  00C9  347C               	retlw	124
   244  00CA  3439               	retlw	57
   245  00CB  345E               	retlw	94
   246  00CC  3479               	retlw	121
   247  00CD  3471               	retlw	113
   248  001E                     _ADRESH	set	30
   249  000B                     _INTCONbits	set	11
   250  001F                     _ADCON0bits	set	31
   251  0009                     _PORTE	set	9
   252  0008                     _PORTD	set	8
   253  0007                     _PORTC	set	7
   254  0006                     _PORTB	set	6
   255  0005                     _PORTA	set	5
   256  0001                     _TMR0	set	1
   257  0041                     _RD1	set	65
   258  0040                     _RD0	set	64
   259  005A                     _TMR0IF	set	90
   260  0081                     _OPTION_REGbits	set	129
   261  009F                     _ADCON1bits	set	159
   262  0089                     _TRISE	set	137
   263  0088                     _TRISD	set	136
   264  0087                     _TRISC	set	135
   265  0086                     _TRISB	set	134
   266  0085                     _TRISA	set	133
   267  008F                     _OSCCONbits	set	143
   268  0189                     _ANSELH	set	393
   269  0188                     _ANSEL	set	392
   270                           
   271                           ; #config settings
   272  0000                     
   273                           	psect	cinit
   274  000F                     start_initialization:	
   275  000F                     __initialization:	
   276                           
   277                           ; Initialize objects allocated to BANK0
   278  000F  1383               	bcf	3,7	;select IRP bank0
   279  0010  3040               	movlw	low (__pdataBANK0+32)
   280  0011  00FD               	movwf	btemp+-1
   281  0012  3000               	movlw	high __pidataBANK0
   282  0013  00FE               	movwf	btemp
   283  0014  30AE               	movlw	low __pidataBANK0
   284  0015  00FF               	movwf	btemp+1
   285  0016  3020               	movlw	low __pdataBANK0
   286  0017  0084               	movwf	4
   287  0018  120A  118A  20D2  120A  118A  	fcall	init_ram0
   288                           
   289                           ; Clear objects allocated to COMMON
   290  001D  01F5               	clrf	__pbssCOMMON& (0+127)
   291  001E  01F6               	clrf	(__pbssCOMMON+1)& (0+127)
   292  001F  01F7               	clrf	(__pbssCOMMON+2)& (0+127)
   293  0020  01F8               	clrf	(__pbssCOMMON+3)& (0+127)
   294  0021                     end_of_initialization:	
   295                           ;End of C runtime variable initialization code
   296                           
   297  0021                     __end_of__initialization:	
   298  0021  0183               	clrf	3
   299  0022  120A  118A  2825   	ljmp	_main	;jump to C main() function
   300                           
   301                           	psect	bssCOMMON
   302  0075                     __pbssCOMMON:	
   303  0075                     _ADC:	
   304  0075                     	ds	1
   305  0076                     _y:	
   306  0076                     	ds	1
   307  0077                     _x:	
   308  0077                     	ds	1
   309  0078                     _BANDERA:	
   310  0078                     	ds	1
   311                           
   312                           	psect	dataBANK0
   313  0020                     __pdataBANK0:	
   314  0020                     _DISPLAY2:	
   315  0020                     	ds	16
   316  0030                     _DISPLAY1:	
   317  0030                     	ds	16
   318                           
   319                           	psect	inittext
   320  00CE                     init_fetch0:	
   321                           ;	Called with low address in FSR and high address in W
   322                           
   323  00CE  087E               	movf	btemp,w
   324  00CF  008A               	movwf	10
   325  00D0  087F               	movf	btemp+1,w
   326  00D1  0082               	movwf	2
   327  00D2                     init_ram0:	
   328                           ;Called with:
   329                           ;	high address of idata address in btemp 
   330                           ;	low address of idata address in btemp+1 
   331                           ;	low address of data in FSR
   332                           ;	high address + 1 of data in btemp-1
   333                           
   334  00D2  120A  118A  20CE  120A  118A  	fcall	init_fetch0
   335  00D7  0080               	movwf	0
   336  00D8  0A84               	incf	4,f
   337  00D9  0804               	movf	4,w
   338  00DA  067D               	xorwf	btemp+-1,w
   339  00DB  1903               	btfsc	3,2
   340  00DC  3400               	retlw	0
   341  00DD  0AFF               	incf	btemp+1,f
   342  00DE  1903               	btfsc	3,2
   343  00DF  0AFE               	incf	btemp,f
   344  00E0  28D2               	goto	init_ram0
   345                           
   346                           	psect	cstackCOMMON
   347  0070                     __pcstackCOMMON:	
   348  0070                     ?_TOGGLE:	
   349  0070                     ??_TOGGLE:	
   350                           ; 1 bytes @ 0x0
   351                           
   352  0070                     ?_analogico:	
   353                           ; 1 bytes @ 0x0
   354                           
   355  0070                     ?_NIBBLES:	
   356                           ; 1 bytes @ 0x0
   357                           
   358  0070                     ?_desplegar:	
   359                           ; 1 bytes @ 0x0
   360                           
   361  0070                     ?_ISR:	
   362                           ; 1 bytes @ 0x0
   363                           
   364  0070                     ??_ISR:	
   365                           ; 1 bytes @ 0x0
   366                           
   367  0070                     ?_main:	
   368                           ; 1 bytes @ 0x0
   369                           
   370                           
   371                           ; 1 bytes @ 0x0
   372  0070                     	ds	2
   373  0072                     ??_NIBBLES:	
   374  0072                     ??_desplegar:	
   375                           ; 1 bytes @ 0x2
   376                           
   377                           
   378                           ; 1 bytes @ 0x2
   379  0072                     	ds	2
   380  0074                     ??_analogico:	
   381                           
   382                           ; 1 bytes @ 0x4
   383  0074                     	ds	1
   384  0075                     ??_main:	
   385                           
   386                           	psect	maintext
   387  0025                     __pmaintext:	
   388                           ; 1 bytes @ 0x5
   389 ;;
   390 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   391 ;;
   392 ;; *************** function _main *****************
   393 ;; Defined at:
   394 ;;		line 65 in file "lab2.c"
   395 ;; Parameters:    Size  Location     Type
   396 ;;		None
   397 ;; Auto vars:     Size  Location     Type
   398 ;;		None
   399 ;; Return value:  Size  Location     Type
   400 ;;                  1    wreg      void 
   401 ;; Registers used:
   402 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   403 ;; Tracked objects:
   404 ;;		On entry : B00/0
   405 ;;		On exit  : 0/0
   406 ;;		Unchanged: 0/0
   407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   408 ;;      Params:         0       0       0       0       0
   409 ;;      Locals:         0       0       0       0       0
   410 ;;      Temps:          0       0       0       0       0
   411 ;;      Totals:         0       0       0       0       0
   412 ;;Total ram usage:        0 bytes
   413 ;; Hardware stack levels required when called:    4
   414 ;; This function calls:
   415 ;;		_analogico
   416 ;; This function is called by:
   417 ;;		Startup code after reset
   418 ;; This function uses a non-reentrant model
   419 ;;
   420                           
   421                           
   422                           ;psect for function _main
   423  0025                     _main:	
   424  0025                     l746:	
   425                           ;incstack = 0
   426                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   427                           
   428                           
   429                           ;lab2.c: 69:     OSCCONbits.IRCF = 0b101;
   430  0025  1683               	bsf	3,5	;RP0=1, select bank1
   431  0026  1303               	bcf	3,6	;RP1=0, select bank1
   432  0027  080F               	movf	15,w	;volatile
   433  0028  398F               	andlw	-113
   434  0029  3850               	iorlw	80
   435  002A  008F               	movwf	15	;volatile
   436  002B                     l748:	
   437                           
   438                           ;lab2.c: 70:     OSCCONbits.OSTS= 0;
   439  002B  118F               	bcf	15,3	;volatile
   440  002C                     l750:	
   441                           
   442                           ;lab2.c: 71:     OSCCONbits.HTS = 0;
   443  002C  110F               	bcf	15,2	;volatile
   444  002D                     l752:	
   445                           
   446                           ;lab2.c: 72:     OSCCONbits.LTS = 0;
   447  002D  108F               	bcf	15,1	;volatile
   448  002E                     l754:	
   449                           
   450                           ;lab2.c: 73:     OSCCONbits.SCS = 1;
   451  002E  140F               	bsf	15,0	;volatile
   452  002F                     l756:	
   453                           
   454                           ;lab2.c: 77:     ANSEL = 0b00000000;
   455  002F  1683               	bsf	3,5	;RP0=1, select bank3
   456  0030  1703               	bsf	3,6	;RP1=1, select bank3
   457  0031  0188               	clrf	8	;volatile
   458  0032                     l758:	
   459                           
   460                           ;lab2.c: 78:     ANSELH = 0b00100000;
   461  0032  3020               	movlw	32
   462  0033  0089               	movwf	9	;volatile
   463  0034                     l760:	
   464                           
   465                           ;lab2.c: 79:     TRISA = 0b00000000;
   466  0034  1683               	bsf	3,5	;RP0=1, select bank1
   467  0035  1303               	bcf	3,6	;RP1=0, select bank1
   468  0036  0185               	clrf	5	;volatile
   469  0037                     l762:	
   470                           
   471                           ;lab2.c: 80:     TRISB = 0b00100011;
   472  0037  3023               	movlw	35
   473  0038  0086               	movwf	6	;volatile
   474  0039                     l764:	
   475                           
   476                           ;lab2.c: 81:     TRISC = 0b00000000;
   477  0039  0187               	clrf	7	;volatile
   478  003A                     l766:	
   479                           
   480                           ;lab2.c: 82:     TRISD = 0b00000000;
   481  003A  0188               	clrf	8	;volatile
   482  003B                     l768:	
   483                           
   484                           ;lab2.c: 83:     TRISE = 0;
   485  003B  0189               	clrf	9	;volatile
   486  003C                     l770:	
   487                           
   488                           ;lab2.c: 84:     PORTA = 0;
   489  003C  1283               	bcf	3,5	;RP0=0, select bank0
   490  003D  1303               	bcf	3,6	;RP1=0, select bank0
   491  003E  0185               	clrf	5	;volatile
   492  003F                     l772:	
   493                           
   494                           ;lab2.c: 85:     PORTB = 0;
   495  003F  0186               	clrf	6	;volatile
   496  0040                     l774:	
   497                           
   498                           ;lab2.c: 86:     PORTC = 0;
   499  0040  0187               	clrf	7	;volatile
   500  0041                     l776:	
   501                           
   502                           ;lab2.c: 87:     PORTD = 0;
   503  0041  0188               	clrf	8	;volatile
   504  0042                     l778:	
   505                           
   506                           ;lab2.c: 88:     PORTE = 0;
   507  0042  0189               	clrf	9	;volatile
   508  0043                     l780:	
   509                           
   510                           ;lab2.c: 91:     ADCON0bits.ADCS0 = 1;
   511  0043  171F               	bsf	31,6	;volatile
   512  0044                     l782:	
   513                           
   514                           ;lab2.c: 92:     ADCON0bits.ADCS1 = 0;
   515  0044  139F               	bcf	31,7	;volatile
   516  0045                     l784:	
   517                           
   518                           ;lab2.c: 93:     ADCON0bits.CHS0 = 1;
   519  0045  151F               	bsf	31,2	;volatile
   520  0046                     l786:	
   521                           
   522                           ;lab2.c: 94:     ADCON0bits.CHS1 = 0;
   523  0046  119F               	bcf	31,3	;volatile
   524  0047                     l788:	
   525                           
   526                           ;lab2.c: 95:     ADCON0bits.CHS2 = 1;
   527  0047  161F               	bsf	31,4	;volatile
   528  0048                     l790:	
   529                           
   530                           ;lab2.c: 96:     ADCON0bits.CHS3 = 1;
   531  0048  169F               	bsf	31,5	;volatile
   532  0049                     l792:	
   533                           
   534                           ;lab2.c: 97:     ADCON0bits.ADON = 1;
   535  0049  141F               	bsf	31,0	;volatile
   536  004A                     l794:	
   537                           
   538                           ;lab2.c: 98:     ADCON1bits.ADFM = 0;
   539  004A  1683               	bsf	3,5	;RP0=1, select bank1
   540  004B  1303               	bcf	3,6	;RP1=0, select bank1
   541  004C  139F               	bcf	31,7	;volatile
   542  004D                     l796:	
   543                           
   544                           ;lab2.c: 99:     ADCON1bits.VCFG0 = 0;
   545  004D  121F               	bcf	31,4	;volatile
   546  004E                     l798:	
   547                           
   548                           ;lab2.c: 100:     ADCON1bits.VCFG1 = 0;
   549  004E  129F               	bcf	31,5	;volatile
   550  004F                     l800:	
   551                           
   552                           ;lab2.c: 103:     OPTION_REGbits.nRBPU = 1;
   553  004F  1781               	bsf	1,7	;volatile
   554  0050                     l802:	
   555                           
   556                           ;lab2.c: 104:     OPTION_REGbits.INTEDG = 0;
   557  0050  1301               	bcf	1,6	;volatile
   558  0051                     l804:	
   559                           
   560                           ;lab2.c: 105:     OPTION_REGbits.T0CS = 0;
   561  0051  1281               	bcf	1,5	;volatile
   562  0052                     l806:	
   563                           
   564                           ;lab2.c: 106:     OPTION_REGbits.T0SE = 0;
   565  0052  1201               	bcf	1,4	;volatile
   566  0053                     l808:	
   567                           
   568                           ;lab2.c: 107:     OPTION_REGbits.PSA = 0;
   569  0053  1181               	bcf	1,3	;volatile
   570                           
   571                           ;lab2.c: 108:     OPTION_REGbits.PS = 0b000;
   572  0054  30F8               	movlw	-8
   573  0055  0581               	andwf	1,f	;volatile
   574  0056                     l810:	
   575                           
   576                           ;lab2.c: 109:     TMR0 = 2;
   577  0056  3002               	movlw	2
   578  0057  1283               	bcf	3,5	;RP0=0, select bank0
   579  0058  1303               	bcf	3,6	;RP1=0, select bank0
   580  0059  0081               	movwf	1	;volatile
   581  005A                     l812:	
   582                           
   583                           ;lab2.c: 112:     INTCONbits.GIE = 1;
   584  005A  178B               	bsf	11,7	;volatile
   585  005B                     l814:	
   586                           
   587                           ;lab2.c: 114:     INTCONbits.T0IE= 1;
   588  005B  168B               	bsf	11,5	;volatile
   589  005C                     l816:	
   590                           
   591                           ;lab2.c: 117:     INTCONbits.T0IF= 1;
   592  005C  150B               	bsf	11,2	;volatile
   593  005D                     l818:	
   594                           
   595                           ;lab2.c: 124:     x=0;
   596  005D  01F7               	clrf	_x
   597  005E                     l820:	
   598                           
   599                           ;lab2.c: 125:     BANDERA = 0;
   600  005E  01F8               	clrf	_BANDERA
   601  005F                     l822:	
   602                           
   603                           ;lab2.c: 126:     analogico();
   604  005F  120A  118A  2067  120A  118A  	fcall	_analogico
   605  0064                     l76:	
   606  0064  120A  118A  280C   	ljmp	start
   607  0067                     __end_of_main:	
   608                           
   609                           	psect	text1
   610  0067                     __ptext1:	
   611 ;; *************** function _analogico *****************
   612 ;; Defined at:
   613 ;;		line 130 in file "lab2.c"
   614 ;; Parameters:    Size  Location     Type
   615 ;;		None
   616 ;; Auto vars:     Size  Location     Type
   617 ;;		None
   618 ;; Return value:  Size  Location     Type
   619 ;;                  1    wreg      void 
   620 ;; Registers used:
   621 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   622 ;; Tracked objects:
   623 ;;		On entry : 0/0
   624 ;;		On exit  : 0/0
   625 ;;		Unchanged: 0/0
   626 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   627 ;;      Params:         0       0       0       0       0
   628 ;;      Locals:         0       0       0       0       0
   629 ;;      Temps:          1       0       0       0       0
   630 ;;      Totals:         1       0       0       0       0
   631 ;;Total ram usage:        1 bytes
   632 ;; Hardware stack levels used:    1
   633 ;; Hardware stack levels required when called:    3
   634 ;; This function calls:
   635 ;;		_NIBBLES
   636 ;;		_desplegar
   637 ;; This function is called by:
   638 ;;		_main
   639 ;; This function uses a non-reentrant model
   640 ;;
   641                           
   642                           
   643                           ;psect for function _analogico
   644  0067                     _analogico:	
   645  0067                     l79:	
   646                           ;incstack = 0
   647                           ; Regs used in _analogico: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   648                           ;lab2.c: 131:         while(1){
   649                           
   650  0067                     l724:	
   651                           
   652                           ;lab2.c: 133:         _delay((unsigned long)((1)*(4000000/4000.0)));
   653  0067  30C7               	movlw	199
   654  0068  00F4               	movwf	??_analogico
   655  0069                     u67:	
   656  0069  286A               	nop2
   657  006A  0BF4               	decfsz	??_analogico,f
   658  006B  2869               	goto	u67
   659  006C  286D               	nop2
   660  006D  286E               	nop2
   661  006E                     l726:	
   662                           
   663                           ;lab2.c: 134:         if(ADCON0bits.GO_DONE == 0){
   664  006E  1283               	bcf	3,5	;RP0=0, select bank0
   665  006F  1303               	bcf	3,6	;RP1=0, select bank0
   666  0070  189F               	btfsc	31,1	;volatile
   667  0071  2873               	goto	u51
   668  0072  2874               	goto	u50
   669  0073                     u51:	
   670  0073  2875               	goto	l730
   671  0074                     u50:	
   672  0074                     l728:	
   673                           
   674                           ;lab2.c: 135:             ADCON0bits.GO_DONE = 1;
   675  0074  149F               	bsf	31,1	;volatile
   676  0075                     l730:	
   677                           
   678                           ;lab2.c: 137:         ADC = ADRESH;
   679  0075  081E               	movf	30,w	;volatile
   680  0076  00F4               	movwf	??_analogico
   681  0077  0874               	movf	??_analogico,w
   682  0078  00F5               	movwf	_ADC
   683                           
   684                           ;lab2.c: 138:         x= ADRESH;
   685  0079  081E               	movf	30,w	;volatile
   686  007A  00F4               	movwf	??_analogico
   687  007B  0874               	movf	??_analogico,w
   688  007C  00F7               	movwf	_x
   689                           
   690                           ;lab2.c: 139:         y = ADRESH;
   691  007D  081E               	movf	30,w	;volatile
   692  007E  00F4               	movwf	??_analogico
   693  007F  0874               	movf	??_analogico,w
   694  0080  00F6               	movwf	_y
   695  0081                     l732:	
   696                           
   697                           ;lab2.c: 140:         NIBBLES();
   698  0081  120A  118A  20E1  120A  118A  	fcall	_NIBBLES
   699  0086                     l734:	
   700                           
   701                           ;lab2.c: 143:        desplegar();
   702  0086  120A  118A  208D  120A  118A  	fcall	_desplegar
   703  008B  2867               	goto	l79
   704  008C  0008               	return
   705  008D                     __end_of_analogico:	
   706                           
   707                           	psect	text2
   708  008D                     __ptext2:	
   709 ;; *************** function _desplegar *****************
   710 ;; Defined at:
   711 ;;		line 149 in file "lab2.c"
   712 ;; Parameters:    Size  Location     Type
   713 ;;		None
   714 ;; Auto vars:     Size  Location     Type
   715 ;;		None
   716 ;; Return value:  Size  Location     Type
   717 ;;                  1    wreg      void 
   718 ;; Registers used:
   719 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   720 ;; Tracked objects:
   721 ;;		On entry : 0/0
   722 ;;		On exit  : 0/0
   723 ;;		Unchanged: 0/0
   724 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   725 ;;      Params:         0       0       0       0       0
   726 ;;      Locals:         0       0       0       0       0
   727 ;;      Temps:          0       0       0       0       0
   728 ;;      Totals:         0       0       0       0       0
   729 ;;Total ram usage:        0 bytes
   730 ;; Hardware stack levels used:    1
   731 ;; Hardware stack levels required when called:    2
   732 ;; This function calls:
   733 ;;		Nothing
   734 ;; This function is called by:
   735 ;;		_analogico
   736 ;; This function uses a non-reentrant model
   737 ;;
   738                           
   739                           
   740                           ;psect for function _desplegar
   741  008D                     _desplegar:	
   742  008D                     l694:	
   743                           ;incstack = 0
   744                           ; Regs used in _desplegar: [wreg-fsr0h+status,2+status,0]
   745                           
   746                           
   747                           ;lab2.c: 150:        PORTC = 0;
   748  008D  1283               	bcf	3,5	;RP0=0, select bank0
   749  008E  1303               	bcf	3,6	;RP1=0, select bank0
   750  008F  0187               	clrf	7	;volatile
   751  0090                     l696:	
   752                           
   753                           ;lab2.c: 151:         RD0 = 0;
   754  0090  1008               	bcf	8,0	;volatile
   755  0091                     l698:	
   756                           
   757                           ;lab2.c: 152:         RD1 = 0;
   758  0091  1088               	bcf	8,1	;volatile
   759  0092                     l700:	
   760                           
   761                           ;lab2.c: 153:         if(BANDERA ==1){
   762  0092  0378               	decf	_BANDERA,w
   763  0093  1D03               	btfss	3,2
   764  0094  2896               	goto	u21
   765  0095  2897               	goto	u20
   766  0096                     u21:	
   767  0096  28A0               	goto	l710
   768  0097                     u20:	
   769  0097                     l702:	
   770                           
   771                           ;lab2.c: 154:             PORTC = DISPLAY1[x];
   772  0097  0877               	movf	_x,w
   773  0098  3E30               	addlw	(low (_DISPLAY1| 0))& (0+255)
   774  0099  0084               	movwf	4
   775  009A  1383               	bcf	3,7	;select IRP bank0
   776  009B  0800               	movf	0,w
   777  009C  0087               	movwf	7	;volatile
   778  009D                     l704:	
   779                           
   780                           ;lab2.c: 155:             RD0 = 1;
   781  009D  1408               	bsf	8,0	;volatile
   782  009E                     l706:	
   783                           
   784                           ;lab2.c: 156:             RD1=0;
   785  009E  1088               	bcf	8,1	;volatile
   786  009F  28AD               	goto	l87
   787  00A0                     l710:	
   788                           
   789                           ;lab2.c: 160:         if(BANDERA == 0){
   790  00A0  0878               	movf	_BANDERA,w
   791  00A1  1D03               	btfss	3,2
   792  00A2  28A4               	goto	u31
   793  00A3  28A5               	goto	u30
   794  00A4                     u31:	
   795  00A4  28AD               	goto	l87
   796  00A5                     u30:	
   797  00A5                     l712:	
   798                           
   799                           ;lab2.c: 162:             PORTC = DISPLAY2[y];
   800  00A5  0876               	movf	_y,w
   801  00A6  3E20               	addlw	(low (_DISPLAY2| 0))& (0+255)
   802  00A7  0084               	movwf	4
   803  00A8  1383               	bcf	3,7	;select IRP bank0
   804  00A9  0800               	movf	0,w
   805  00AA  0087               	movwf	7	;volatile
   806  00AB                     l714:	
   807                           
   808                           ;lab2.c: 163:             RD1 = 1;
   809  00AB  1488               	bsf	8,1	;volatile
   810  00AC                     l716:	
   811                           
   812                           ;lab2.c: 164:             RD0 = 0;
   813  00AC  1008               	bcf	8,0	;volatile
   814  00AD                     l87:	
   815  00AD  0008               	return
   816  00AE                     __end_of_desplegar:	
   817                           
   818                           	psect	text3
   819  00E1                     __ptext3:	
   820 ;; *************** function _NIBBLES *****************
   821 ;; Defined at:
   822 ;;		line 172 in file "lab2.c"
   823 ;; Parameters:    Size  Location     Type
   824 ;;		None
   825 ;; Auto vars:     Size  Location     Type
   826 ;;		None
   827 ;; Return value:  Size  Location     Type
   828 ;;                  1    wreg      void 
   829 ;; Registers used:
   830 ;;		wreg, status,2, status,0
   831 ;; Tracked objects:
   832 ;;		On entry : 0/0
   833 ;;		On exit  : 0/0
   834 ;;		Unchanged: 0/0
   835 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   836 ;;      Params:         0       0       0       0       0
   837 ;;      Locals:         0       0       0       0       0
   838 ;;      Temps:          2       0       0       0       0
   839 ;;      Totals:         2       0       0       0       0
   840 ;;Total ram usage:        2 bytes
   841 ;; Hardware stack levels used:    1
   842 ;; Hardware stack levels required when called:    2
   843 ;; This function calls:
   844 ;;		Nothing
   845 ;; This function is called by:
   846 ;;		_analogico
   847 ;; This function uses a non-reentrant model
   848 ;;
   849                           
   850                           
   851                           ;psect for function _NIBBLES
   852  00E1                     _NIBBLES:	
   853  00E1                     l688:	
   854                           ;incstack = 0
   855                           ; Regs used in _NIBBLES: [wreg+status,2+status,0]
   856                           
   857                           
   858                           ;lab2.c: 173:         x = x & 0x0F;
   859  00E1  0877               	movf	_x,w
   860  00E2  390F               	andlw	15
   861  00E3  00F2               	movwf	??_NIBBLES
   862  00E4  0872               	movf	??_NIBBLES,w
   863  00E5  00F7               	movwf	_x
   864  00E6                     l690:	
   865                           
   866                           ;lab2.c: 174:         y = ((y & 0xF0)>>4);
   867  00E6  0876               	movf	_y,w
   868  00E7  00F2               	movwf	??_NIBBLES
   869  00E8  3004               	movlw	4
   870  00E9                     u15:	
   871  00E9  1003               	clrc
   872  00EA  0CF2               	rrf	??_NIBBLES,f
   873  00EB  3EFF               	addlw	-1
   874  00EC  1D03               	skipz
   875  00ED  28E9               	goto	u15
   876  00EE  0872               	movf	??_NIBBLES,w
   877  00EF  390F               	andlw	15
   878  00F0  00F3               	movwf	??_NIBBLES+1
   879  00F1  0873               	movf	??_NIBBLES+1,w
   880  00F2  00F6               	movwf	_y
   881  00F3                     l91:	
   882  00F3  0008               	return
   883  00F4                     __end_of_NIBBLES:	
   884                           
   885                           	psect	text4
   886  00F4                     __ptext4:	
   887 ;; *************** function _ISR *****************
   888 ;; Defined at:
   889 ;;		line 55 in file "lab2.c"
   890 ;; Parameters:    Size  Location     Type
   891 ;;		None
   892 ;; Auto vars:     Size  Location     Type
   893 ;;		None
   894 ;; Return value:  Size  Location     Type
   895 ;;                  1    wreg      void 
   896 ;; Registers used:
   897 ;;		wreg, status,2, status,0, pclath, cstack
   898 ;; Tracked objects:
   899 ;;		On entry : 0/0
   900 ;;		On exit  : 0/0
   901 ;;		Unchanged: 0/0
   902 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   903 ;;      Params:         0       0       0       0       0
   904 ;;      Locals:         0       0       0       0       0
   905 ;;      Temps:          2       0       0       0       0
   906 ;;      Totals:         2       0       0       0       0
   907 ;;Total ram usage:        2 bytes
   908 ;; Hardware stack levels used:    1
   909 ;; Hardware stack levels required when called:    1
   910 ;; This function calls:
   911 ;;		_TOGGLE
   912 ;; This function is called by:
   913 ;;		Interrupt level 1
   914 ;; This function uses a non-reentrant model
   915 ;;
   916                           
   917                           
   918                           ;psect for function _ISR
   919  00F4                     _ISR:	
   920  00F4                     i1l736:	
   921                           
   922                           ;lab2.c: 57:     TOGGLE();
   923  00F4  120A  118A  2107  120A  118A  	fcall	_TOGGLE
   924  00F9                     i1l738:	
   925                           
   926                           ;lab2.c: 58:         TMR0IF=0;
   927  00F9  110B               	bcf	11,2	;volatile
   928  00FA                     i1l740:	
   929                           
   930                           ;lab2.c: 59:         TMR0= 2;
   931  00FA  3002               	movlw	2
   932  00FB  1283               	bcf	3,5	;RP0=0, select bank0
   933  00FC  1303               	bcf	3,6	;RP1=0, select bank0
   934  00FD  0081               	movwf	1	;volatile
   935  00FE                     i1l742:	
   936                           
   937                           ;lab2.c: 60:         PORTA = ADC;
   938  00FE  0875               	movf	_ADC,w
   939  00FF  0085               	movwf	5	;volatile
   940  0100                     i1l71:	
   941  0100  0871               	movf	??_ISR+1,w
   942  0101  008A               	movwf	10
   943  0102  0E70               	swapf	??_ISR^(0+4294967168),w
   944  0103  0083               	movwf	3
   945  0104  0EFE               	swapf	btemp,f
   946  0105  0E7E               	swapf	btemp,w
   947  0106  0009               	retfie
   948  0107                     __end_of_ISR:	
   949                           
   950                           	psect	intentry
   951  0004                     __pintentry:	
   952                           ;incstack = 0
   953                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
   954                           
   955  0004                     interrupt_function:	
   956  007E                     saved_w	set	btemp
   957  0004  00FE               	movwf	btemp
   958  0005  0E03               	swapf	3,w
   959  0006  00F0               	movwf	??_ISR
   960  0007  080A               	movf	10,w
   961  0008  00F1               	movwf	??_ISR+1
   962  0009  120A  118A  28F4   	ljmp	_ISR
   963                           
   964                           	psect	text5
   965  0107                     __ptext5:	
   966 ;; *************** function _TOGGLE *****************
   967 ;; Defined at:
   968 ;;		line 180 in file "lab2.c"
   969 ;; Parameters:    Size  Location     Type
   970 ;;		None
   971 ;; Auto vars:     Size  Location     Type
   972 ;;		None
   973 ;; Return value:  Size  Location     Type
   974 ;;                  1    wreg      void 
   975 ;; Registers used:
   976 ;;		wreg, status,2, status,0
   977 ;; Tracked objects:
   978 ;;		On entry : 0/0
   979 ;;		On exit  : 0/0
   980 ;;		Unchanged: 0/0
   981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   982 ;;      Params:         0       0       0       0       0
   983 ;;      Locals:         0       0       0       0       0
   984 ;;      Temps:          0       0       0       0       0
   985 ;;      Totals:         0       0       0       0       0
   986 ;;Total ram usage:        0 bytes
   987 ;; Hardware stack levels used:    1
   988 ;; This function calls:
   989 ;;		Nothing
   990 ;; This function is called by:
   991 ;;		_ISR
   992 ;; This function uses a non-reentrant model
   993 ;;
   994                           
   995                           
   996                           ;psect for function _TOGGLE
   997  0107                     _TOGGLE:	
   998  0107                     i1l720:	
   999                           ;incstack = 0
  1000                           ; Regs used in _TOGGLE: [wreg+status,2+status,0]
  1001                           
  1002                           
  1003                           ;lab2.c: 181:         if(BANDERA==1){
  1004  0107  0378               	decf	_BANDERA,w
  1005  0108  1D03               	btfss	3,2
  1006  0109  290B               	goto	u4_21
  1007  010A  290C               	goto	u4_20
  1008  010B                     u4_21:	
  1009  010B  290E               	goto	i1l94
  1010  010C                     u4_20:	
  1011  010C                     i1l722:	
  1012                           
  1013                           ;lab2.c: 182:             BANDERA =0;
  1014  010C  01F8               	clrf	_BANDERA
  1015                           
  1016                           ;lab2.c: 183:         }
  1017  010D  2910               	goto	i1l96
  1018  010E                     i1l94:	
  1019                           ;lab2.c: 184:         else{
  1020                           
  1021                           
  1022                           ;lab2.c: 185:             BANDERA = 1;
  1023  010E  01F8               	clrf	_BANDERA
  1024  010F  0AF8               	incf	_BANDERA,f
  1025  0110                     i1l96:	
  1026  0110  0008               	return
  1027  0111                     __end_of_TOGGLE:	
  1028  007E                     btemp	set	126	;btemp
  1029  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        32
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       9
    BANK0            80      0      32
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_analogico
    _analogico->_NIBBLES

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                          _analogico
 ---------------------------------------------------------------------------------
 (1) _analogico                                            1     1      0       0
                                              4 COMMON     1     1      0
                            _NIBBLES
                          _desplegar
 ---------------------------------------------------------------------------------
 (2) _desplegar                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _NIBBLES                                              2     2      0       0
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
                             _TOGGLE
 ---------------------------------------------------------------------------------
 (4) _TOGGLE                                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _analogico
     _NIBBLES
     _desplegar

 _ISR (ROOT)
   _TOGGLE

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0      20       5       40.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      5       9       1       64.3%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      29      12        0.0%
ABS                  0      0      29       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sun Feb 02 01:51:24 2020

                       _x 0077                         _y 0076                         pc 0002  
             __CFG_CP$OFF 0000                        l91 00F3                        l76 0064  
                      l87 00AD                        l79 0067                        u20 0097  
                      u21 0096                        u30 00A5                        u15 00E9  
                      u31 00A4                        u50 0074                        u51 0073  
                      u67 0069                        fsr 0004                       _ADC 0075  
                     l700 0092                       l702 0097                       l710 00A0  
                     l712 00A5                       l704 009D                       l800 004F  
                     l714 00AB                       l706 009E                       l730 0075  
                     l810 0056                       l802 0050                       l716 00AC  
                     l732 0081                       l724 0067                       l820 005E  
                     l812 005A                       l804 0051                       l734 0086  
                     l726 006E                       l822 005F                       l814 005B  
                     l806 0052                       l750 002C                       l728 0074  
                     l816 005C                       l808 0053                       l760 0034  
                     l752 002D                       l690 00E6                       l818 005D  
                     l770 003C                       l762 0037                       l754 002E  
                     l746 0025                       l780 0043                       l772 003F  
                     l764 0039                       l756 002F                       l748 002B  
                     l694 008D                       l790 0048                       l782 0044  
                     l774 0040                       l766 003A                       l758 0032  
                     l688 00E1                       l696 0090                       l792 0049  
                     l784 0045                       l776 0041                       l768 003B  
                     l698 0091                       l794 004A                       l786 0046  
                     l778 0042                       l796 004D                       l788 0047  
                     l798 004E                       _RD0 0040                       _RD1 0041  
            __CFG_CPD$OFF 0000                       _ISR 00F4                       fsr0 0004  
                     indf 0000           __end_of_NIBBLES 00F4              __CFG_LVP$OFF 0000  
                    ?_ISR 0070                      i1l71 0100                      i1l94 010E  
                    i1l96 0110                      _TMR0 0001                      u4_20 010C  
                    u4_21 010B              __CFG_WRT$OFF 0000                      _main 0025  
                    btemp 007E                      start 000C             __CFG_IESO$OFF 0000  
                   ??_ISR 0070                     ?_main 0070             __CFG_WDTE$OFF 0000  
                   _ANSEL 0188                     i1l720 0107                     i1l722 010C  
                   i1l740 00FA                     i1l742 00FE                     i1l736 00F4  
                   i1l738 00F9                     _PORTA 0005                     _PORTB 0006  
                   _PORTC 0007                     _PORTD 0008                     _PORTE 0009  
                   _TRISA 0085                     _TRISB 0086                     _TRISC 0087  
                   _TRISD 0088                     _TRISE 0089            __CFG_FCMEN$OFF 0000  
          __CFG_BOREN$OFF 0000                     pclath 000A                     status 0003  
                   wtemp0 007E            __CFG_MCLRE$OFF 0000           __initialization 000F  
            __end_of_main 0067                    ??_main 0075                 ??_NIBBLES 0072  
                  _ADRESH 001E                    _ANSELH 0189                    _TMR0IF 005A  
                  _TOGGLE 0107            __CFG_PWRTE$OFF 0000                    saved_w 007E  
 __end_of__initialization 0021            __pcstackCOMMON 0070              __pidataBANK0 00AE  
      __size_of_analogico 0026            _OPTION_REGbits 0081        __size_of_desplegar 0021  
                 ?_TOGGLE 0070                __pmaintext 0025                __pintentry 0004  
                 _BANDERA 0078                   _NIBBLES 00E1         __end_of_analogico 008D  
         __size_of_TOGGLE 000A         __end_of_desplegar 00AE                   __ptext1 0067  
                 __ptext2 008D                   __ptext3 00E1                   __ptext4 00F4  
                 __ptext5 0107              __size_of_ISR 0013      end_of_initialization 0021  
          __end_of_TOGGLE 0111       start_initialization 000F               __end_of_ISR 0107  
                ??_TOGGLE 0070  __CFG_FOSC$INTRC_NOCLKOUT 0000                init_fetch0 00CE  
             __pdataBANK0 0020                  ?_NIBBLES 0070               __pbssCOMMON 0075  
               ___latbits 0002                 _analogico 0067                 _desplegar 008D  
                _DISPLAY1 0030                  _DISPLAY2 0020         interrupt_function 0004  
              ?_analogico 0070                ?_desplegar 0070                _ADCON0bits 001F  
              _ADCON1bits 009F          __size_of_NIBBLES 0013         __CFG_BOR4V$BOR40V 0000  
           __size_of_main 0042               ??_analogico 0074               ??_desplegar 0072  
              _INTCONbits 000B                  init_ram0 00D2                  intlevel1 0000  
              _OSCCONbits 008F  
