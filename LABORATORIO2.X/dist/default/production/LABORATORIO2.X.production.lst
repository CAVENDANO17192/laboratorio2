

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sun Feb 02 01:28:22 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	intentry,global,class=CODE,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	dabs	1,0x7E,2
    17  0000                     
    18                           ; Version 2.10
    19                           ; Generated 31/07/2019 GMT
    20                           ; 
    21                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC16F887 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     	;# 
    53  0001                     	;# 
    54  0002                     	;# 
    55  0003                     	;# 
    56  0004                     	;# 
    57  0005                     	;# 
    58  0006                     	;# 
    59  0007                     	;# 
    60  0008                     	;# 
    61  0009                     	;# 
    62  000A                     	;# 
    63  000B                     	;# 
    64  000C                     	;# 
    65  000D                     	;# 
    66  000E                     	;# 
    67  000E                     	;# 
    68  000F                     	;# 
    69  0010                     	;# 
    70  0011                     	;# 
    71  0012                     	;# 
    72  0013                     	;# 
    73  0014                     	;# 
    74  0015                     	;# 
    75  0015                     	;# 
    76  0016                     	;# 
    77  0017                     	;# 
    78  0018                     	;# 
    79  0019                     	;# 
    80  001A                     	;# 
    81  001B                     	;# 
    82  001B                     	;# 
    83  001C                     	;# 
    84  001D                     	;# 
    85  001E                     	;# 
    86  001F                     	;# 
    87  0081                     	;# 
    88  0085                     	;# 
    89  0086                     	;# 
    90  0087                     	;# 
    91  0088                     	;# 
    92  0089                     	;# 
    93  008C                     	;# 
    94  008D                     	;# 
    95  008E                     	;# 
    96  008F                     	;# 
    97  0090                     	;# 
    98  0091                     	;# 
    99  0092                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0094                     	;# 
   104  0095                     	;# 
   105  0096                     	;# 
   106  0097                     	;# 
   107  0098                     	;# 
   108  0099                     	;# 
   109  009A                     	;# 
   110  009B                     	;# 
   111  009C                     	;# 
   112  009D                     	;# 
   113  009E                     	;# 
   114  009F                     	;# 
   115  0105                     	;# 
   116  0107                     	;# 
   117  0108                     	;# 
   118  0109                     	;# 
   119  010C                     	;# 
   120  010C                     	;# 
   121  010D                     	;# 
   122  010E                     	;# 
   123  010F                     	;# 
   124  0185                     	;# 
   125  0187                     	;# 
   126  0188                     	;# 
   127  0189                     	;# 
   128  018C                     	;# 
   129  018D                     	;# 
   130  0000                     	;# 
   131  0001                     	;# 
   132  0002                     	;# 
   133  0003                     	;# 
   134  0004                     	;# 
   135  0005                     	;# 
   136  0006                     	;# 
   137  0007                     	;# 
   138  0008                     	;# 
   139  0009                     	;# 
   140  000A                     	;# 
   141  000B                     	;# 
   142  000C                     	;# 
   143  000D                     	;# 
   144  000E                     	;# 
   145  000E                     	;# 
   146  000F                     	;# 
   147  0010                     	;# 
   148  0011                     	;# 
   149  0012                     	;# 
   150  0013                     	;# 
   151  0014                     	;# 
   152  0015                     	;# 
   153  0015                     	;# 
   154  0016                     	;# 
   155  0017                     	;# 
   156  0018                     	;# 
   157  0019                     	;# 
   158  001A                     	;# 
   159  001B                     	;# 
   160  001B                     	;# 
   161  001C                     	;# 
   162  001D                     	;# 
   163  001E                     	;# 
   164  001F                     	;# 
   165  0081                     	;# 
   166  0085                     	;# 
   167  0086                     	;# 
   168  0087                     	;# 
   169  0088                     	;# 
   170  0089                     	;# 
   171  008C                     	;# 
   172  008D                     	;# 
   173  008E                     	;# 
   174  008F                     	;# 
   175  0090                     	;# 
   176  0091                     	;# 
   177  0092                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0094                     	;# 
   182  0095                     	;# 
   183  0096                     	;# 
   184  0097                     	;# 
   185  0098                     	;# 
   186  0099                     	;# 
   187  009A                     	;# 
   188  009B                     	;# 
   189  009C                     	;# 
   190  009D                     	;# 
   191  009E                     	;# 
   192  009F                     	;# 
   193  0105                     	;# 
   194  0107                     	;# 
   195  0108                     	;# 
   196  0109                     	;# 
   197  010C                     	;# 
   198  010C                     	;# 
   199  010D                     	;# 
   200  010E                     	;# 
   201  010F                     	;# 
   202  0185                     	;# 
   203  0187                     	;# 
   204  0188                     	;# 
   205  0189                     	;# 
   206  018C                     	;# 
   207  018D                     	;# 
   208                           
   209                           	psect	idataBANK0
   210  00AE                     __pidataBANK0:	
   211                           
   212                           ;initializer for _DISPLAY2
   213  00AE  343F               	retlw	63
   214  00AF  3406               	retlw	6
   215  00B0  345B               	retlw	91
   216  00B1  344F               	retlw	79
   217  00B2  3466               	retlw	102
   218  00B3  346D               	retlw	109
   219  00B4  347D               	retlw	125
   220  00B5  3407               	retlw	7
   221  00B6  347F               	retlw	127
   222  00B7  346F               	retlw	111
   223  00B8  3477               	retlw	119
   224  00B9  347C               	retlw	124
   225  00BA  3439               	retlw	57
   226  00BB  345E               	retlw	94
   227  00BC  3479               	retlw	121
   228  00BD  3471               	retlw	113
   229                           
   230                           ;initializer for _DISPLAY1
   231  00BE  343F               	retlw	63
   232  00BF  3406               	retlw	6
   233  00C0  345B               	retlw	91
   234  00C1  344F               	retlw	79
   235  00C2  3466               	retlw	102
   236  00C3  346D               	retlw	109
   237  00C4  347D               	retlw	125
   238  00C5  3407               	retlw	7
   239  00C6  347F               	retlw	127
   240  00C7  346F               	retlw	111
   241  00C8  3477               	retlw	119
   242  00C9  347C               	retlw	124
   243  00CA  3439               	retlw	57
   244  00CB  345E               	retlw	94
   245  00CC  3479               	retlw	121
   246  00CD  3471               	retlw	113
   247  001E                     _ADRESH	set	30
   248  000B                     _INTCONbits	set	11
   249  001F                     _ADCON0bits	set	31
   250  0009                     _PORTE	set	9
   251  0008                     _PORTD	set	8
   252  0007                     _PORTC	set	7
   253  0006                     _PORTB	set	6
   254  0005                     _PORTA	set	5
   255  0001                     _TMR0	set	1
   256  0041                     _RD1	set	65
   257  0040                     _RD0	set	64
   258  005A                     _TMR0IF	set	90
   259  0081                     _OPTION_REGbits	set	129
   260  009F                     _ADCON1bits	set	159
   261  0089                     _TRISE	set	137
   262  0088                     _TRISD	set	136
   263  0087                     _TRISC	set	135
   264  0086                     _TRISB	set	134
   265  0085                     _TRISA	set	133
   266  008F                     _OSCCONbits	set	143
   267  0189                     _ANSELH	set	393
   268  0188                     _ANSEL	set	392
   269                           
   270                           ; #config settings
   271  0000                     
   272                           	psect	cinit
   273  0011                     start_initialization:	
   274  0011                     __initialization:	
   275                           
   276                           ; Initialize objects allocated to BANK0
   277  0011  1383               	bcf	3,7	;select IRP bank0
   278  0012  3040               	movlw	low (__pdataBANK0+32)
   279  0013  00FD               	movwf	btemp+-1
   280  0014  3000               	movlw	high __pidataBANK0
   281  0015  00FE               	movwf	btemp
   282  0016  30AE               	movlw	low __pidataBANK0
   283  0017  00FF               	movwf	btemp+1
   284  0018  3020               	movlw	low __pdataBANK0
   285  0019  0084               	movwf	4
   286  001A  120A  118A  20E7  120A  118A  	fcall	init_ram0
   287                           
   288                           ; Clear objects allocated to COMMON
   289  001F  01F6               	clrf	__pbssCOMMON& (0+127)
   290  0020  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   291  0021  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   292  0022  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   293  0023                     end_of_initialization:	
   294                           ;End of C runtime variable initialization code
   295                           
   296  0023                     __end_of__initialization:	
   297  0023  0183               	clrf	3
   298  0024  120A  118A  2827   	ljmp	_main	;jump to C main() function
   299                           
   300                           	psect	bssCOMMON
   301  0076                     __pbssCOMMON:	
   302  0076                     _ADC:	
   303  0076                     	ds	1
   304  0077                     _y:	
   305  0077                     	ds	1
   306  0078                     _x:	
   307  0078                     	ds	1
   308  0079                     _BANDERA:	
   309  0079                     	ds	1
   310                           
   311                           	psect	dataBANK0
   312  0020                     __pdataBANK0:	
   313  0020                     _DISPLAY2:	
   314  0020                     	ds	16
   315  0030                     _DISPLAY1:	
   316  0030                     	ds	16
   317                           
   318                           	psect	inittext
   319  00E3                     init_fetch0:	
   320                           ;	Called with low address in FSR and high address in W
   321                           
   322  00E3  087E               	movf	btemp,w
   323  00E4  008A               	movwf	10
   324  00E5  087F               	movf	btemp+1,w
   325  00E6  0082               	movwf	2
   326  00E7                     init_ram0:	
   327                           ;Called with:
   328                           ;	high address of idata address in btemp 
   329                           ;	low address of idata address in btemp+1 
   330                           ;	low address of data in FSR
   331                           ;	high address + 1 of data in btemp-1
   332                           
   333  00E7  120A  118A  20E3  120A  118A  	fcall	init_fetch0
   334  00EC  0080               	movwf	0
   335  00ED  0A84               	incf	4,f
   336  00EE  0804               	movf	4,w
   337  00EF  067D               	xorwf	btemp+-1,w
   338  00F0  1903               	btfsc	3,2
   339  00F1  3400               	retlw	0
   340  00F2  0AFF               	incf	btemp+1,f
   341  00F3  1903               	btfsc	3,2
   342  00F4  0AFE               	incf	btemp,f
   343  00F5  28E7               	goto	init_ram0
   344                           
   345                           	psect	cstackCOMMON
   346  0070                     __pcstackCOMMON:	
   347  0070                     ?_desplegar:	
   348  0070                     ??_desplegar:	
   349                           ; 1 bytes @ 0x0
   350                           
   351  0070                     ?_analogico:	
   352                           ; 1 bytes @ 0x0
   353                           
   354  0070                     ?_NIBBLES:	
   355                           ; 1 bytes @ 0x0
   356                           
   357  0070                     ?_ISR:	
   358                           ; 1 bytes @ 0x0
   359                           
   360  0070                     ??_ISR:	
   361                           ; 1 bytes @ 0x0
   362                           
   363  0070                     ?_main:	
   364                           ; 1 bytes @ 0x0
   365                           
   366                           
   367                           ; 1 bytes @ 0x0
   368  0070                     	ds	3
   369  0073                     ??_NIBBLES:	
   370                           
   371                           ; 1 bytes @ 0x3
   372  0073                     	ds	2
   373  0075                     ??_analogico:	
   374                           
   375                           ; 1 bytes @ 0x5
   376  0075                     	ds	1
   377  0076                     ??_main:	
   378                           
   379                           	psect	maintext
   380  0027                     __pmaintext:	
   381                           ; 1 bytes @ 0x6
   382 ;;
   383 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   384 ;;
   385 ;; *************** function _main *****************
   386 ;; Defined at:
   387 ;;		line 67 in file "lab2.c"
   388 ;; Parameters:    Size  Location     Type
   389 ;;		None
   390 ;; Auto vars:     Size  Location     Type
   391 ;;		None
   392 ;; Return value:  Size  Location     Type
   393 ;;                  1    wreg      void 
   394 ;; Registers used:
   395 ;;		wreg, status,2, status,0, pclath, cstack
   396 ;; Tracked objects:
   397 ;;		On entry : B00/0
   398 ;;		On exit  : 0/0
   399 ;;		Unchanged: 0/0
   400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   401 ;;      Params:         0       0       0       0       0
   402 ;;      Locals:         0       0       0       0       0
   403 ;;      Temps:          0       0       0       0       0
   404 ;;      Totals:         0       0       0       0       0
   405 ;;Total ram usage:        0 bytes
   406 ;; Hardware stack levels required when called:    4
   407 ;; This function calls:
   408 ;;		_analogico
   409 ;; This function is called by:
   410 ;;		Startup code after reset
   411 ;; This function uses a non-reentrant model
   412 ;;
   413                           
   414                           
   415                           ;psect for function _main
   416  0027                     _main:	
   417  0027                     l735:	
   418                           ;incstack = 0
   419                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   420                           
   421                           
   422                           ;lab2.c: 71:     OSCCONbits.IRCF = 0b110;
   423  0027  1683               	bsf	3,5	;RP0=1, select bank1
   424  0028  1303               	bcf	3,6	;RP1=0, select bank1
   425  0029  080F               	movf	15,w	;volatile
   426  002A  398F               	andlw	-113
   427  002B  3860               	iorlw	96
   428  002C  008F               	movwf	15	;volatile
   429  002D                     l737:	
   430                           
   431                           ;lab2.c: 72:     OSCCONbits.OSTS= 0;
   432  002D  118F               	bcf	15,3	;volatile
   433  002E                     l739:	
   434                           
   435                           ;lab2.c: 73:     OSCCONbits.HTS = 0;
   436  002E  110F               	bcf	15,2	;volatile
   437  002F                     l741:	
   438                           
   439                           ;lab2.c: 74:     OSCCONbits.LTS = 0;
   440  002F  108F               	bcf	15,1	;volatile
   441  0030                     l743:	
   442                           
   443                           ;lab2.c: 75:     OSCCONbits.SCS = 1;
   444  0030  140F               	bsf	15,0	;volatile
   445  0031                     l745:	
   446                           
   447                           ;lab2.c: 79:     ANSEL = 0b00000000;
   448  0031  1683               	bsf	3,5	;RP0=1, select bank3
   449  0032  1703               	bsf	3,6	;RP1=1, select bank3
   450  0033  0188               	clrf	8	;volatile
   451  0034                     l747:	
   452                           
   453                           ;lab2.c: 80:     ANSELH = 0b00100000;
   454  0034  3020               	movlw	32
   455  0035  0089               	movwf	9	;volatile
   456  0036                     l749:	
   457                           
   458                           ;lab2.c: 81:     TRISA = 0b00000000;
   459  0036  1683               	bsf	3,5	;RP0=1, select bank1
   460  0037  1303               	bcf	3,6	;RP1=0, select bank1
   461  0038  0185               	clrf	5	;volatile
   462  0039                     l751:	
   463                           
   464                           ;lab2.c: 82:     TRISB = 0b00100011;
   465  0039  3023               	movlw	35
   466  003A  0086               	movwf	6	;volatile
   467  003B                     l753:	
   468                           
   469                           ;lab2.c: 83:     TRISC = 0b00000000;
   470  003B  0187               	clrf	7	;volatile
   471  003C                     l755:	
   472                           
   473                           ;lab2.c: 84:     TRISD = 0b00000000;
   474  003C  0188               	clrf	8	;volatile
   475  003D                     l757:	
   476                           
   477                           ;lab2.c: 85:     TRISE = 0;
   478  003D  0189               	clrf	9	;volatile
   479  003E                     l759:	
   480                           
   481                           ;lab2.c: 86:     PORTA = 0;
   482  003E  1283               	bcf	3,5	;RP0=0, select bank0
   483  003F  1303               	bcf	3,6	;RP1=0, select bank0
   484  0040  0185               	clrf	5	;volatile
   485  0041                     l761:	
   486                           
   487                           ;lab2.c: 87:     PORTB = 0;
   488  0041  0186               	clrf	6	;volatile
   489  0042                     l763:	
   490                           
   491                           ;lab2.c: 88:     PORTC = 0;
   492  0042  0187               	clrf	7	;volatile
   493  0043                     l765:	
   494                           
   495                           ;lab2.c: 89:     PORTD = 0;
   496  0043  0188               	clrf	8	;volatile
   497  0044                     l767:	
   498                           
   499                           ;lab2.c: 90:     PORTE = 0;
   500  0044  0189               	clrf	9	;volatile
   501  0045                     l769:	
   502                           
   503                           ;lab2.c: 93:     ADCON0bits.ADCS0 = 1;
   504  0045  171F               	bsf	31,6	;volatile
   505  0046                     l771:	
   506                           
   507                           ;lab2.c: 94:     ADCON0bits.ADCS1 = 0;
   508  0046  139F               	bcf	31,7	;volatile
   509  0047                     l773:	
   510                           
   511                           ;lab2.c: 95:     ADCON0bits.CHS0 = 1;
   512  0047  151F               	bsf	31,2	;volatile
   513  0048                     l775:	
   514                           
   515                           ;lab2.c: 96:     ADCON0bits.CHS1 = 0;
   516  0048  119F               	bcf	31,3	;volatile
   517  0049                     l777:	
   518                           
   519                           ;lab2.c: 97:     ADCON0bits.CHS2 = 1;
   520  0049  161F               	bsf	31,4	;volatile
   521  004A                     l779:	
   522                           
   523                           ;lab2.c: 98:     ADCON0bits.CHS3 = 1;
   524  004A  169F               	bsf	31,5	;volatile
   525  004B                     l781:	
   526                           
   527                           ;lab2.c: 99:     ADCON0bits.ADON = 1;
   528  004B  141F               	bsf	31,0	;volatile
   529  004C                     l783:	
   530                           
   531                           ;lab2.c: 100:     ADCON1bits.ADFM = 0;
   532  004C  1683               	bsf	3,5	;RP0=1, select bank1
   533  004D  1303               	bcf	3,6	;RP1=0, select bank1
   534  004E  139F               	bcf	31,7	;volatile
   535  004F                     l785:	
   536                           
   537                           ;lab2.c: 101:     ADCON1bits.VCFG0 = 0;
   538  004F  121F               	bcf	31,4	;volatile
   539  0050                     l787:	
   540                           
   541                           ;lab2.c: 102:     ADCON1bits.VCFG1 = 0;
   542  0050  129F               	bcf	31,5	;volatile
   543  0051                     l789:	
   544                           
   545                           ;lab2.c: 105:     OPTION_REGbits.nRBPU = 1;
   546  0051  1781               	bsf	1,7	;volatile
   547  0052                     l791:	
   548                           
   549                           ;lab2.c: 106:     OPTION_REGbits.INTEDG = 0;
   550  0052  1301               	bcf	1,6	;volatile
   551  0053                     l793:	
   552                           
   553                           ;lab2.c: 107:     OPTION_REGbits.T0CS = 0;
   554  0053  1281               	bcf	1,5	;volatile
   555  0054                     l795:	
   556                           
   557                           ;lab2.c: 108:     OPTION_REGbits.T0SE = 0;
   558  0054  1201               	bcf	1,4	;volatile
   559  0055                     l797:	
   560                           
   561                           ;lab2.c: 109:     OPTION_REGbits.PSA = 0;
   562  0055  1181               	bcf	1,3	;volatile
   563                           
   564                           ;lab2.c: 110:     OPTION_REGbits.PS = 0b000;
   565  0056  30F8               	movlw	-8
   566  0057  0581               	andwf	1,f	;volatile
   567  0058                     l799:	
   568                           
   569                           ;lab2.c: 111:     TMR0 = 2;
   570  0058  3002               	movlw	2
   571  0059  1283               	bcf	3,5	;RP0=0, select bank0
   572  005A  1303               	bcf	3,6	;RP1=0, select bank0
   573  005B  0081               	movwf	1	;volatile
   574  005C                     l801:	
   575                           
   576                           ;lab2.c: 114:     INTCONbits.GIE = 1;
   577  005C  178B               	bsf	11,7	;volatile
   578  005D                     l803:	
   579                           
   580                           ;lab2.c: 116:     INTCONbits.T0IE= 1;
   581  005D  168B               	bsf	11,5	;volatile
   582  005E                     l805:	
   583                           
   584                           ;lab2.c: 119:     INTCONbits.T0IF= 0;
   585  005E  110B               	bcf	11,2	;volatile
   586  005F                     l807:	
   587                           
   588                           ;lab2.c: 126:     x=0;
   589  005F  01F8               	clrf	_x
   590  0060                     l809:	
   591                           
   592                           ;lab2.c: 127:     BANDERA = 0;
   593  0060  01F9               	clrf	_BANDERA
   594  0061                     l811:	
   595                           
   596                           ;lab2.c: 128:     analogico();
   597  0061  120A  118A  208D  120A  118A  	fcall	_analogico
   598  0066                     l74:	
   599  0066  120A  118A  280E   	ljmp	start
   600  0069                     __end_of_main:	
   601                           
   602                           	psect	text1
   603  008D                     __ptext1:	
   604 ;; *************** function _analogico *****************
   605 ;; Defined at:
   606 ;;		line 132 in file "lab2.c"
   607 ;; Parameters:    Size  Location     Type
   608 ;;		None
   609 ;; Auto vars:     Size  Location     Type
   610 ;;		None
   611 ;; Return value:  Size  Location     Type
   612 ;;                  1    wreg      void 
   613 ;; Registers used:
   614 ;;		wreg, status,2, status,0, pclath, cstack
   615 ;; Tracked objects:
   616 ;;		On entry : 0/0
   617 ;;		On exit  : 0/0
   618 ;;		Unchanged: 0/0
   619 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   620 ;;      Params:         0       0       0       0       0
   621 ;;      Locals:         0       0       0       0       0
   622 ;;      Temps:          1       0       0       0       0
   623 ;;      Totals:         1       0       0       0       0
   624 ;;Total ram usage:        1 bytes
   625 ;; Hardware stack levels used:    1
   626 ;; Hardware stack levels required when called:    3
   627 ;; This function calls:
   628 ;;		_NIBBLES
   629 ;; This function is called by:
   630 ;;		_main
   631 ;; This function uses a non-reentrant model
   632 ;;
   633                           
   634                           
   635                           ;psect for function _analogico
   636  008D                     _analogico:	
   637  008D                     l77:	
   638                           ;incstack = 0
   639                           ; Regs used in _analogico: [wreg+status,2+status,0+pclath+cstack]
   640                           ;lab2.c: 133:         while(1){
   641                           
   642  008D                     l717:	
   643                           
   644                           ;lab2.c: 135:         _delay((unsigned long)((1)*(4000000/4000.0)));
   645  008D  30C7               	movlw	199
   646  008E  00F5               	movwf	??_analogico
   647  008F                     u57:	
   648  008F  2890               	nop2
   649  0090  0BF5               	decfsz	??_analogico,f
   650  0091  288F               	goto	u57
   651  0092  2893               	nop2
   652  0093  2894               	nop2
   653  0094                     l719:	
   654                           
   655                           ;lab2.c: 136:         if(ADCON0bits.GO_DONE == 0){
   656  0094  1283               	bcf	3,5	;RP0=0, select bank0
   657  0095  1303               	bcf	3,6	;RP1=0, select bank0
   658  0096  189F               	btfsc	31,1	;volatile
   659  0097  2899               	goto	u41
   660  0098  289A               	goto	u40
   661  0099                     u41:	
   662  0099  289B               	goto	l723
   663  009A                     u40:	
   664  009A                     l721:	
   665                           
   666                           ;lab2.c: 137:             ADCON0bits.GO_DONE = 1;
   667  009A  149F               	bsf	31,1	;volatile
   668  009B                     l723:	
   669                           
   670                           ;lab2.c: 139:         ADC = ADRESH;
   671  009B  081E               	movf	30,w	;volatile
   672  009C  00F5               	movwf	??_analogico
   673  009D  0875               	movf	??_analogico,w
   674  009E  00F6               	movwf	_ADC
   675                           
   676                           ;lab2.c: 140:         x= ADRESH;
   677  009F  081E               	movf	30,w	;volatile
   678  00A0  00F5               	movwf	??_analogico
   679  00A1  0875               	movf	??_analogico,w
   680  00A2  00F8               	movwf	_x
   681                           
   682                           ;lab2.c: 141:         y = ADRESH;
   683  00A3  081E               	movf	30,w	;volatile
   684  00A4  00F5               	movwf	??_analogico
   685  00A5  0875               	movf	??_analogico,w
   686  00A6  00F7               	movwf	_y
   687  00A7                     l725:	
   688                           
   689                           ;lab2.c: 142:         NIBBLES();
   690  00A7  120A  118A  20F6  120A  118A  	fcall	_NIBBLES
   691  00AC  288D               	goto	l77
   692  00AD  0008               	return
   693  00AE                     __end_of_analogico:	
   694                           
   695                           	psect	text2
   696  00F6                     __ptext2:	
   697 ;; *************** function _NIBBLES *****************
   698 ;; Defined at:
   699 ;;		line 174 in file "lab2.c"
   700 ;; Parameters:    Size  Location     Type
   701 ;;		None
   702 ;; Auto vars:     Size  Location     Type
   703 ;;		None
   704 ;; Return value:  Size  Location     Type
   705 ;;                  1    wreg      void 
   706 ;; Registers used:
   707 ;;		wreg, status,2, status,0
   708 ;; Tracked objects:
   709 ;;		On entry : 0/0
   710 ;;		On exit  : 0/0
   711 ;;		Unchanged: 0/0
   712 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   713 ;;      Params:         0       0       0       0       0
   714 ;;      Locals:         0       0       0       0       0
   715 ;;      Temps:          2       0       0       0       0
   716 ;;      Totals:         2       0       0       0       0
   717 ;;Total ram usage:        2 bytes
   718 ;; Hardware stack levels used:    1
   719 ;; Hardware stack levels required when called:    2
   720 ;; This function calls:
   721 ;;		Nothing
   722 ;; This function is called by:
   723 ;;		_analogico
   724 ;; This function uses a non-reentrant model
   725 ;;
   726                           
   727                           
   728                           ;psect for function _NIBBLES
   729  00F6                     _NIBBLES:	
   730  00F6                     l681:	
   731                           ;incstack = 0
   732                           ; Regs used in _NIBBLES: [wreg+status,2+status,0]
   733                           
   734                           
   735                           ;lab2.c: 175:         x = x & 0x0F;
   736  00F6  0878               	movf	_x,w
   737  00F7  390F               	andlw	15
   738  00F8  00F3               	movwf	??_NIBBLES
   739  00F9  0873               	movf	??_NIBBLES,w
   740  00FA  00F8               	movwf	_x
   741  00FB                     l683:	
   742                           
   743                           ;lab2.c: 176:         y = ((y & 0xF0)>>4);
   744  00FB  0877               	movf	_y,w
   745  00FC  00F3               	movwf	??_NIBBLES
   746  00FD  3004               	movlw	4
   747  00FE                     u15:	
   748  00FE  1003               	clrc
   749  00FF  0CF3               	rrf	??_NIBBLES,f
   750  0100  3EFF               	addlw	-1
   751  0101  1D03               	skipz
   752  0102  28FE               	goto	u15
   753  0103  0873               	movf	??_NIBBLES,w
   754  0104  390F               	andlw	15
   755  0105  00F4               	movwf	??_NIBBLES+1
   756  0106  0874               	movf	??_NIBBLES+1,w
   757  0107  00F7               	movwf	_y
   758  0108                     l89:	
   759  0108  0008               	return
   760  0109                     __end_of_NIBBLES:	
   761                           
   762                           	psect	text3
   763  00CE                     __ptext3:	
   764 ;; *************** function _ISR *****************
   765 ;; Defined at:
   766 ;;		line 54 in file "lab2.c"
   767 ;; Parameters:    Size  Location     Type
   768 ;;		None
   769 ;; Auto vars:     Size  Location     Type
   770 ;;		None
   771 ;; Return value:  Size  Location     Type
   772 ;;                  1    wreg      void 
   773 ;; Registers used:
   774 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   775 ;; Tracked objects:
   776 ;;		On entry : 0/0
   777 ;;		On exit  : 0/0
   778 ;;		Unchanged: 0/0
   779 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   780 ;;      Params:         0       0       0       0       0
   781 ;;      Locals:         0       0       0       0       0
   782 ;;      Temps:          3       0       0       0       0
   783 ;;      Totals:         3       0       0       0       0
   784 ;;Total ram usage:        3 bytes
   785 ;; Hardware stack levels used:    1
   786 ;; Hardware stack levels required when called:    1
   787 ;; This function calls:
   788 ;;		_desplegar
   789 ;; This function is called by:
   790 ;;		Interrupt level 1
   791 ;; This function uses a non-reentrant model
   792 ;;
   793                           
   794                           
   795                           ;psect for function _ISR
   796  00CE                     _ISR:	
   797  00CE                     i1l727:	
   798                           
   799                           ;lab2.c: 56:         TMR0IF=0;
   800  00CE  110B               	bcf	11,2	;volatile
   801  00CF                     i1l729:	
   802                           
   803                           ;lab2.c: 57:         TMR0= 2;
   804  00CF  3002               	movlw	2
   805  00D0  1283               	bcf	3,5	;RP0=0, select bank0
   806  00D1  1303               	bcf	3,6	;RP1=0, select bank0
   807  00D2  0081               	movwf	1	;volatile
   808                           
   809                           ;lab2.c: 59:         PORTA = ADC;
   810  00D3  0876               	movf	_ADC,w
   811  00D4  0085               	movwf	5	;volatile
   812  00D5                     i1l731:	
   813                           
   814                           ;lab2.c: 60:         desplegar();
   815  00D5  120A  118A  2069  120A  118A  	fcall	_desplegar
   816  00DA                     i1l69:	
   817  00DA  0872               	movf	??_ISR+2,w
   818  00DB  008A               	movwf	10
   819  00DC  0871               	movf	??_ISR+1,w
   820  00DD  0084               	movwf	4
   821  00DE  0E70               	swapf	??_ISR^(0+4294967168),w
   822  00DF  0083               	movwf	3
   823  00E0  0EFE               	swapf	btemp,f
   824  00E1  0E7E               	swapf	btemp,w
   825  00E2  0009               	retfie
   826  00E3                     __end_of_ISR:	
   827                           
   828                           	psect	intentry
   829  0004                     __pintentry:	
   830                           ;incstack = 0
   831                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   832                           
   833  0004                     interrupt_function:	
   834  007E                     saved_w	set	btemp
   835  0004  00FE               	movwf	btemp
   836  0005  0E03               	swapf	3,w
   837  0006  00F0               	movwf	??_ISR
   838  0007  0804               	movf	4,w
   839  0008  00F1               	movwf	??_ISR+1
   840  0009  080A               	movf	10,w
   841  000A  00F2               	movwf	??_ISR+2
   842  000B  120A  118A  28CE   	ljmp	_ISR
   843                           
   844                           	psect	text4
   845  0069                     __ptext4:	
   846 ;; *************** function _desplegar *****************
   847 ;; Defined at:
   848 ;;		line 151 in file "lab2.c"
   849 ;; Parameters:    Size  Location     Type
   850 ;;		None
   851 ;; Auto vars:     Size  Location     Type
   852 ;;		None
   853 ;; Return value:  Size  Location     Type
   854 ;;                  1    wreg      void 
   855 ;; Registers used:
   856 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   857 ;; Tracked objects:
   858 ;;		On entry : 0/0
   859 ;;		On exit  : 0/0
   860 ;;		Unchanged: 0/0
   861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   862 ;;      Params:         0       0       0       0       0
   863 ;;      Locals:         0       0       0       0       0
   864 ;;      Temps:          0       0       0       0       0
   865 ;;      Totals:         0       0       0       0       0
   866 ;;Total ram usage:        0 bytes
   867 ;; Hardware stack levels used:    1
   868 ;; This function calls:
   869 ;;		Nothing
   870 ;; This function is called by:
   871 ;;		_ISR
   872 ;; This function uses a non-reentrant model
   873 ;;
   874                           
   875                           
   876                           ;psect for function _desplegar
   877  0069                     _desplegar:	
   878  0069                     i1l687:	
   879                           ;incstack = 0
   880                           ; Regs used in _desplegar: [wreg-fsr0h+status,2+status,0]
   881                           
   882                           
   883                           ;lab2.c: 152:        PORTC = 0;
   884  0069  1283               	bcf	3,5	;RP0=0, select bank0
   885  006A  1303               	bcf	3,6	;RP1=0, select bank0
   886  006B  0187               	clrf	7	;volatile
   887  006C                     i1l689:	
   888                           
   889                           ;lab2.c: 153:         RD0 = 0;
   890  006C  1008               	bcf	8,0	;volatile
   891  006D                     i1l691:	
   892                           
   893                           ;lab2.c: 154:         RD1 = 0;
   894  006D  1088               	bcf	8,1	;volatile
   895  006E                     i1l693:	
   896                           
   897                           ;lab2.c: 155:         if(BANDERA ==1){
   898  006E  0379               	decf	_BANDERA,w
   899  006F  1D03               	btfss	3,2
   900  0070  2872               	goto	u2_21
   901  0071  2873               	goto	u2_20
   902  0072                     u2_21:	
   903  0072  287D               	goto	i1l705
   904  0073                     u2_20:	
   905  0073                     i1l695:	
   906                           
   907                           ;lab2.c: 156:             PORTC = DISPLAY1[x];
   908  0073  0878               	movf	_x,w
   909  0074  3E30               	addlw	(low (_DISPLAY1| 0))& (0+255)
   910  0075  0084               	movwf	4
   911  0076  1383               	bcf	3,7	;select IRP bank0
   912  0077  0800               	movf	0,w
   913  0078  0087               	movwf	7	;volatile
   914  0079                     i1l697:	
   915                           
   916                           ;lab2.c: 157:             RD0 = 1;
   917  0079  1408               	bsf	8,0	;volatile
   918  007A                     i1l699:	
   919                           
   920                           ;lab2.c: 158:             RD1=0;
   921  007A  1088               	bcf	8,1	;volatile
   922  007B                     i1l701:	
   923                           
   924                           ;lab2.c: 159:             BANDERA = 0;
   925  007B  01F9               	clrf	_BANDERA
   926  007C  288C               	goto	i1l85
   927  007D                     i1l705:	
   928                           
   929                           ;lab2.c: 162:         if(BANDERA == 0){
   930  007D  0879               	movf	_BANDERA,w
   931  007E  1D03               	btfss	3,2
   932  007F  2881               	goto	u3_21
   933  0080  2882               	goto	u3_20
   934  0081                     u3_21:	
   935  0081  288C               	goto	i1l85
   936  0082                     u3_20:	
   937  0082                     i1l707:	
   938                           
   939                           ;lab2.c: 164:             PORTC = DISPLAY2[y];
   940  0082  0877               	movf	_y,w
   941  0083  3E20               	addlw	(low (_DISPLAY2| 0))& (0+255)
   942  0084  0084               	movwf	4
   943  0085  1383               	bcf	3,7	;select IRP bank0
   944  0086  0800               	movf	0,w
   945  0087  0087               	movwf	7	;volatile
   946  0088                     i1l709:	
   947                           
   948                           ;lab2.c: 165:             RD1 = 1;
   949  0088  1488               	bsf	8,1	;volatile
   950  0089                     i1l711:	
   951                           
   952                           ;lab2.c: 166:             RD0 = 0;
   953  0089  1008               	bcf	8,0	;volatile
   954  008A                     i1l713:	
   955                           
   956                           ;lab2.c: 167:             BANDERA = 1;
   957  008A  01F9               	clrf	_BANDERA
   958  008B  0AF9               	incf	_BANDERA,f
   959  008C                     i1l85:	
   960  008C  0008               	return
   961  008D                     __end_of_desplegar:	
   962  007E                     btemp	set	126	;btemp
   963  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        32
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80      0      32
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_analogico
    _analogico->_NIBBLES

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                          _analogico
 ---------------------------------------------------------------------------------
 (1) _analogico                                            1     1      0       0
                                              5 COMMON     1     1      0
                            _NIBBLES
 ---------------------------------------------------------------------------------
 (2) _NIBBLES                                              2     2      0       0
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
                          _desplegar
 ---------------------------------------------------------------------------------
 (4) _desplegar                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _analogico
     _NIBBLES

 _ISR (ROOT)
   _desplegar

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0      20       5       40.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      2A      12        0.0%
ABS                  0      0      2A       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sun Feb 02 01:28:22 2020

                       _x 0078                         _y 0077                         pc 0002  
             __CFG_CP$OFF 0000                        l74 0066                        l77 008D  
                      l89 0108                        u15 00FE                        u40 009A  
                      u41 0099                        u57 008F                        fsr 0004  
                     _ADC 0076                       l721 009A                       l801 005C  
                     l723 009B                       l811 0061                       l803 005D  
                     l725 00A7                       l717 008D                       l805 005E  
                     l741 002F                       l719 0094                       l807 005F  
                     l751 0039                       l743 0030                       l735 0027  
                     l681 00F6                       l809 0060                       l761 0041  
                     l753 003B                       l745 0031                       l737 002D  
                     l683 00FB                       l771 0046                       l763 0042  
                     l755 003C                       l747 0034                       l739 002E  
                     l781 004B                       l773 0047                       l765 0043  
                     l757 003D                       l749 0036                       l791 0052  
                     l783 004C                       l775 0048                       l767 0044  
                     l759 003E                       l793 0053                       l785 004F  
                     l777 0049                       l769 0045                       l795 0054  
                     l787 0050                       l779 004A                       l797 0055  
                     l789 0051                       l799 0058                       _RD0 0040  
                     _RD1 0041              __CFG_CPD$OFF 0000                       _ISR 00CE  
                     fsr0 0004                       indf 0000           __end_of_NIBBLES 0109  
            __CFG_LVP$OFF 0000                      ?_ISR 0070                      i1l85 008C  
                    i1l69 00DA                      _TMR0 0001                      u2_20 0073  
                    u2_21 0072                      u3_20 0082                      u3_21 0081  
            __CFG_WRT$OFF 0000                      _main 0027                      btemp 007E  
                    start 000E             __CFG_IESO$OFF 0000                     ??_ISR 0070  
                   ?_main 0070             __CFG_WDTE$OFF 0000                     _ANSEL 0188  
                   i1l701 007B                     i1l711 0089                     i1l713 008A  
                   i1l705 007D                     i1l707 0082                     i1l731 00D5  
                   i1l709 0088                     i1l727 00CE                     i1l729 00CF  
                   i1l691 006D                     i1l693 006E                     i1l695 0073  
                   i1l687 0069                     i1l697 0079                     i1l689 006C  
                   i1l699 007A                     _PORTA 0005                     _PORTB 0006  
                   _PORTC 0007                     _PORTD 0008                     _PORTE 0009  
                   _TRISA 0085                     _TRISB 0086                     _TRISC 0087  
                   _TRISD 0088                     _TRISE 0089            __CFG_FCMEN$OFF 0000  
          __CFG_BOREN$OFF 0000                     pclath 000A                     status 0003  
                   wtemp0 007E            __CFG_MCLRE$OFF 0000           __initialization 0011  
            __end_of_main 0069                    ??_main 0076                 ??_NIBBLES 0073  
                  _ADRESH 001E                    _ANSELH 0189                    _TMR0IF 005A  
          __CFG_PWRTE$OFF 0000                    saved_w 007E   __end_of__initialization 0023  
          __pcstackCOMMON 0070              __pidataBANK0 00AE        __size_of_analogico 0021  
          _OPTION_REGbits 0081        __size_of_desplegar 0024                __pmaintext 0027  
              __pintentry 0004                   _BANDERA 0079                   _NIBBLES 00F6  
       __end_of_analogico 00AE         __end_of_desplegar 008D                   __ptext1 008D  
                 __ptext2 00F6                   __ptext3 00CE                   __ptext4 0069  
            __size_of_ISR 0015      end_of_initialization 0023       start_initialization 0011  
             __end_of_ISR 00E3  __CFG_FOSC$INTRC_NOCLKOUT 0000                init_fetch0 00E3  
             __pdataBANK0 0020                  ?_NIBBLES 0070               __pbssCOMMON 0076  
               ___latbits 0002                 _analogico 008D                 _desplegar 0069  
                _DISPLAY1 0030                  _DISPLAY2 0020         interrupt_function 0004  
              ?_analogico 0070                ?_desplegar 0070                _ADCON0bits 001F  
              _ADCON1bits 009F          __size_of_NIBBLES 0013         __CFG_BOR4V$BOR40V 0000  
           __size_of_main 0042               ??_analogico 0075               ??_desplegar 0070  
              _INTCONbits 000B                  init_ram0 00E7                  intlevel1 0000  
              _OSCCONbits 008F  
