

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sun Feb 02 23:00:47 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	intentry,global,class=CODE,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 2.10
    20                           ; Generated 31/07/2019 GMT
    21                           ; 
    22                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F887 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0007                     	;# 
    61  0008                     	;# 
    62  0009                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  000D                     	;# 
    67  000E                     	;# 
    68  000E                     	;# 
    69  000F                     	;# 
    70  0010                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0013                     	;# 
    74  0014                     	;# 
    75  0015                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0017                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001B                     	;# 
    83  001B                     	;# 
    84  001C                     	;# 
    85  001D                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  0081                     	;# 
    89  0085                     	;# 
    90  0086                     	;# 
    91  0087                     	;# 
    92  0088                     	;# 
    93  0089                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  008E                     	;# 
    97  008F                     	;# 
    98  0090                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0094                     	;# 
   105  0095                     	;# 
   106  0096                     	;# 
   107  0097                     	;# 
   108  0098                     	;# 
   109  0099                     	;# 
   110  009A                     	;# 
   111  009B                     	;# 
   112  009C                     	;# 
   113  009D                     	;# 
   114  009E                     	;# 
   115  009F                     	;# 
   116  0105                     	;# 
   117  0107                     	;# 
   118  0108                     	;# 
   119  0109                     	;# 
   120  010C                     	;# 
   121  010C                     	;# 
   122  010D                     	;# 
   123  010E                     	;# 
   124  010F                     	;# 
   125  0185                     	;# 
   126  0187                     	;# 
   127  0188                     	;# 
   128  0189                     	;# 
   129  018C                     	;# 
   130  018D                     	;# 
   131  0000                     	;# 
   132  0001                     	;# 
   133  0002                     	;# 
   134  0003                     	;# 
   135  0004                     	;# 
   136  0005                     	;# 
   137  0006                     	;# 
   138  0007                     	;# 
   139  0008                     	;# 
   140  0009                     	;# 
   141  000A                     	;# 
   142  000B                     	;# 
   143  000C                     	;# 
   144  000D                     	;# 
   145  000E                     	;# 
   146  000E                     	;# 
   147  000F                     	;# 
   148  0010                     	;# 
   149  0011                     	;# 
   150  0012                     	;# 
   151  0013                     	;# 
   152  0014                     	;# 
   153  0015                     	;# 
   154  0015                     	;# 
   155  0016                     	;# 
   156  0017                     	;# 
   157  0018                     	;# 
   158  0019                     	;# 
   159  001A                     	;# 
   160  001B                     	;# 
   161  001B                     	;# 
   162  001C                     	;# 
   163  001D                     	;# 
   164  001E                     	;# 
   165  001F                     	;# 
   166  0081                     	;# 
   167  0085                     	;# 
   168  0086                     	;# 
   169  0087                     	;# 
   170  0088                     	;# 
   171  0089                     	;# 
   172  008C                     	;# 
   173  008D                     	;# 
   174  008E                     	;# 
   175  008F                     	;# 
   176  0090                     	;# 
   177  0091                     	;# 
   178  0092                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0094                     	;# 
   183  0095                     	;# 
   184  0096                     	;# 
   185  0097                     	;# 
   186  0098                     	;# 
   187  0099                     	;# 
   188  009A                     	;# 
   189  009B                     	;# 
   190  009C                     	;# 
   191  009D                     	;# 
   192  009E                     	;# 
   193  009F                     	;# 
   194  0105                     	;# 
   195  0107                     	;# 
   196  0108                     	;# 
   197  0109                     	;# 
   198  010C                     	;# 
   199  010C                     	;# 
   200  010D                     	;# 
   201  010E                     	;# 
   202  010F                     	;# 
   203  0185                     	;# 
   204  0187                     	;# 
   205  0188                     	;# 
   206  0189                     	;# 
   207  018C                     	;# 
   208  018D                     	;# 
   209                           
   210                           	psect	idataBANK0
   211  00DC                     __pidataBANK0:	
   212                           
   213                           ;initializer for _DISPLAY2
   214  00DC  343F               	retlw	63
   215  00DD  3406               	retlw	6
   216  00DE  345B               	retlw	91
   217  00DF  344F               	retlw	79
   218  00E0  3466               	retlw	102
   219  00E1  346D               	retlw	109
   220  00E2  347D               	retlw	125
   221  00E3  3407               	retlw	7
   222  00E4  347F               	retlw	127
   223  00E5  346F               	retlw	111
   224  00E6  3477               	retlw	119
   225  00E7  347C               	retlw	124
   226  00E8  3439               	retlw	57
   227  00E9  345E               	retlw	94
   228  00EA  3479               	retlw	121
   229  00EB  3471               	retlw	113
   230                           
   231                           ;initializer for _DISPLAY1
   232  00EC  343F               	retlw	63
   233  00ED  3406               	retlw	6
   234  00EE  345B               	retlw	91
   235  00EF  344F               	retlw	79
   236  00F0  3466               	retlw	102
   237  00F1  346D               	retlw	109
   238  00F2  347D               	retlw	125
   239  00F3  3407               	retlw	7
   240  00F4  347F               	retlw	127
   241  00F5  346F               	retlw	111
   242  00F6  3477               	retlw	119
   243  00F7  347C               	retlw	124
   244  00F8  3439               	retlw	57
   245  00F9  345E               	retlw	94
   246  00FA  3479               	retlw	121
   247  00FB  3471               	retlw	113
   248  001E                     _ADRESH	set	30
   249  000B                     _INTCONbits	set	11
   250  001F                     _ADCON0bits	set	31
   251  0009                     _PORTE	set	9
   252  0008                     _PORTD	set	8
   253  0007                     _PORTC	set	7
   254  0006                     _PORTB	set	6
   255  0005                     _PORTA	set	5
   256  0001                     _TMR0	set	1
   257  0041                     _RD1	set	65
   258  0040                     _RD0	set	64
   259  0031                     _RB1	set	49
   260  0030                     _RB0	set	48
   261  005A                     _TMR0IF	set	90
   262  0081                     _OPTION_REGbits	set	129
   263  009F                     _ADCON1bits	set	159
   264  0089                     _TRISE	set	137
   265  0088                     _TRISD	set	136
   266  0087                     _TRISC	set	135
   267  0086                     _TRISB	set	134
   268  0085                     _TRISA	set	133
   269  008F                     _OSCCONbits	set	143
   270  0189                     _ANSELH	set	393
   271  0188                     _ANSEL	set	392
   272                           
   273                           ; #config settings
   274  0000                     
   275                           	psect	cinit
   276  000F                     start_initialization:	
   277  000F                     __initialization:	
   278                           
   279                           ; Initialize objects allocated to BANK0
   280  000F  1383               	bcf	3,7	;select IRP bank0
   281  0010  3040               	movlw	low (__pdataBANK0+32)
   282  0011  00FD               	movwf	btemp+-1
   283  0012  3000               	movlw	high __pidataBANK0
   284  0013  00FE               	movwf	btemp
   285  0014  30DC               	movlw	low __pidataBANK0
   286  0015  00FF               	movwf	btemp+1
   287  0016  3020               	movlw	low __pdataBANK0
   288  0017  0084               	movwf	4
   289  0018  120A  118A  2117  120A  118A  	fcall	init_ram0
   290                           
   291                           ; Clear objects allocated to COMMON
   292  001D  01F0               	clrf	__pbssCOMMON& (0+127)
   293  001E  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   294  001F  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   295  0020  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   296  0021  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   297  0022  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
   298  0023  01F6               	clrf	(__pbssCOMMON+6)& (0+127)
   299  0024                     end_of_initialization:	
   300                           ;End of C runtime variable initialization code
   301                           
   302  0024                     __end_of__initialization:	
   303  0024  0183               	clrf	3
   304  0025  120A  118A  2878   	ljmp	_main	;jump to C main() function
   305                           
   306                           	psect	bssCOMMON
   307  0070                     __pbssCOMMON:	
   308  0070                     _ANTIREBOTEB:	
   309  0070                     	ds	1
   310  0071                     _ANTIREBOTEA:	
   311  0071                     	ds	1
   312  0072                     _ADC:	
   313  0072                     	ds	1
   314  0073                     _y:	
   315  0073                     	ds	1
   316  0074                     _x:	
   317  0074                     	ds	1
   318  0075                     _i:	
   319  0075                     	ds	1
   320  0076                     _BANDERA:	
   321  0076                     	ds	1
   322                           
   323                           	psect	dataBANK0
   324  0020                     __pdataBANK0:	
   325  0020                     _DISPLAY2:	
   326  0020                     	ds	16
   327  0030                     _DISPLAY1:	
   328  0030                     	ds	16
   329                           
   330                           	psect	inittext
   331  0113                     init_fetch0:	
   332                           ;	Called with low address in FSR and high address in W
   333                           
   334  0113  087E               	movf	btemp,w
   335  0114  008A               	movwf	10
   336  0115  087F               	movf	btemp+1,w
   337  0116  0082               	movwf	2
   338  0117                     init_ram0:	
   339                           ;Called with:
   340                           ;	high address of idata address in btemp 
   341                           ;	low address of idata address in btemp+1 
   342                           ;	low address of data in FSR
   343                           ;	high address + 1 of data in btemp-1
   344                           
   345  0117  120A  118A  2113  120A  118A  	fcall	init_fetch0
   346  011C  0080               	movwf	0
   347  011D  0A84               	incf	4,f
   348  011E  0804               	movf	4,w
   349  011F  067D               	xorwf	btemp+-1,w
   350  0120  1903               	btfsc	3,2
   351  0121  3400               	retlw	0
   352  0122  0AFF               	incf	btemp+1,f
   353  0123  1903               	btfsc	3,2
   354  0124  0AFE               	incf	btemp,f
   355  0125  2917               	goto	init_ram0
   356                           
   357                           	psect	cstackCOMMON
   358  0077                     __pcstackCOMMON:	
   359  0077                     ?_TOGGLE:	
   360  0077                     ??_TOGGLE:	
   361                           ; 1 bytes @ 0x0
   362                           
   363  0077                     ?_analogico:	
   364                           ; 1 bytes @ 0x0
   365                           
   366  0077                     ?_NIBBLES:	
   367                           ; 1 bytes @ 0x0
   368                           
   369  0077                     ?_desplegar:	
   370                           ; 1 bytes @ 0x0
   371                           
   372  0077                     ?_ISR:	
   373                           ; 1 bytes @ 0x0
   374                           
   375  0077                     ??_ISR:	
   376                           ; 1 bytes @ 0x0
   377                           
   378  0077                     ?_main:	
   379                           ; 1 bytes @ 0x0
   380                           
   381                           
   382                           ; 1 bytes @ 0x0
   383  0077                     	ds	2
   384  0079                     ??_NIBBLES:	
   385  0079                     ??_desplegar:	
   386                           ; 1 bytes @ 0x2
   387                           
   388                           
   389                           ; 1 bytes @ 0x2
   390  0079                     	ds	2
   391  007B                     ??_analogico:	
   392                           
   393                           ; 1 bytes @ 0x4
   394  007B                     	ds	1
   395  007C                     ??_main:	
   396                           
   397                           	psect	maintext
   398  0078                     __pmaintext:	
   399                           ; 1 bytes @ 0x5
   400 ;;
   401 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   402 ;;
   403 ;; *************** function _main *****************
   404 ;; Defined at:
   405 ;;		line 71 in file "lab2.c"
   406 ;; Parameters:    Size  Location     Type
   407 ;;		None
   408 ;; Auto vars:     Size  Location     Type
   409 ;;		None
   410 ;; Return value:  Size  Location     Type
   411 ;;                  1    wreg      void 
   412 ;; Registers used:
   413 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   414 ;; Tracked objects:
   415 ;;		On entry : B00/0
   416 ;;		On exit  : 0/0
   417 ;;		Unchanged: 0/0
   418 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   419 ;;      Params:         0       0       0       0       0
   420 ;;      Locals:         0       0       0       0       0
   421 ;;      Temps:          0       0       0       0       0
   422 ;;      Totals:         0       0       0       0       0
   423 ;;Total ram usage:        0 bytes
   424 ;; Hardware stack levels required when called:    4
   425 ;; This function calls:
   426 ;;		_analogico
   427 ;; This function is called by:
   428 ;;		Startup code after reset
   429 ;; This function uses a non-reentrant model
   430 ;;
   431                           
   432                           
   433                           ;psect for function _main
   434  0078                     _main:	
   435  0078                     l791:	
   436                           ;incstack = 0
   437                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   438                           
   439                           
   440                           ;lab2.c: 75:     OSCCONbits.IRCF = 0b110;
   441  0078  1683               	bsf	3,5	;RP0=1, select bank1
   442  0079  1303               	bcf	3,6	;RP1=0, select bank1
   443  007A  080F               	movf	15,w	;volatile
   444  007B  398F               	andlw	-113
   445  007C  3860               	iorlw	96
   446  007D  008F               	movwf	15	;volatile
   447  007E                     l793:	
   448                           
   449                           ;lab2.c: 76:     OSCCONbits.OSTS= 0;
   450  007E  118F               	bcf	15,3	;volatile
   451  007F                     l795:	
   452                           
   453                           ;lab2.c: 77:     OSCCONbits.HTS = 0;
   454  007F  110F               	bcf	15,2	;volatile
   455  0080                     l797:	
   456                           
   457                           ;lab2.c: 78:     OSCCONbits.LTS = 0;
   458  0080  108F               	bcf	15,1	;volatile
   459  0081                     l799:	
   460                           
   461                           ;lab2.c: 79:     OSCCONbits.SCS = 1;
   462  0081  140F               	bsf	15,0	;volatile
   463  0082                     l801:	
   464                           
   465                           ;lab2.c: 83:     ANSEL = 0b00000000;
   466  0082  1683               	bsf	3,5	;RP0=1, select bank3
   467  0083  1703               	bsf	3,6	;RP1=1, select bank3
   468  0084  0188               	clrf	8	;volatile
   469  0085                     l803:	
   470                           
   471                           ;lab2.c: 84:     ANSELH = 0b00100000;
   472  0085  3020               	movlw	32
   473  0086  0089               	movwf	9	;volatile
   474  0087                     l805:	
   475                           
   476                           ;lab2.c: 85:     TRISA = 0b00000000;
   477  0087  1683               	bsf	3,5	;RP0=1, select bank1
   478  0088  1303               	bcf	3,6	;RP1=0, select bank1
   479  0089  0185               	clrf	5	;volatile
   480  008A                     l807:	
   481                           
   482                           ;lab2.c: 86:     TRISB = 0b00100011;
   483  008A  3023               	movlw	35
   484  008B  0086               	movwf	6	;volatile
   485  008C                     l809:	
   486                           
   487                           ;lab2.c: 87:     TRISC = 0b00000000;
   488  008C  0187               	clrf	7	;volatile
   489  008D                     l811:	
   490                           
   491                           ;lab2.c: 88:     TRISD = 0b00000000;
   492  008D  0188               	clrf	8	;volatile
   493  008E                     l813:	
   494                           
   495                           ;lab2.c: 89:     TRISE = 0;
   496  008E  0189               	clrf	9	;volatile
   497  008F                     l815:	
   498                           
   499                           ;lab2.c: 90:     PORTA = 0;
   500  008F  1283               	bcf	3,5	;RP0=0, select bank0
   501  0090  1303               	bcf	3,6	;RP1=0, select bank0
   502  0091  0185               	clrf	5	;volatile
   503  0092                     l817:	
   504                           
   505                           ;lab2.c: 91:     PORTB = 0;
   506  0092  0186               	clrf	6	;volatile
   507  0093                     l819:	
   508                           
   509                           ;lab2.c: 92:     PORTC = 0;
   510  0093  0187               	clrf	7	;volatile
   511  0094                     l821:	
   512                           
   513                           ;lab2.c: 93:     PORTD = 0;
   514  0094  0188               	clrf	8	;volatile
   515  0095                     l823:	
   516                           
   517                           ;lab2.c: 94:     PORTE = 0;
   518  0095  0189               	clrf	9	;volatile
   519  0096                     l825:	
   520                           
   521                           ;lab2.c: 97:     ADCON0bits.ADCS0 = 1;
   522  0096  171F               	bsf	31,6	;volatile
   523  0097                     l827:	
   524                           
   525                           ;lab2.c: 98:     ADCON0bits.ADCS1 = 0;
   526  0097  139F               	bcf	31,7	;volatile
   527  0098                     l829:	
   528                           
   529                           ;lab2.c: 99:     ADCON0bits.CHS0 = 1;
   530  0098  151F               	bsf	31,2	;volatile
   531  0099                     l831:	
   532                           
   533                           ;lab2.c: 100:     ADCON0bits.CHS1 = 0;
   534  0099  119F               	bcf	31,3	;volatile
   535  009A                     l833:	
   536                           
   537                           ;lab2.c: 101:     ADCON0bits.CHS2 = 1;
   538  009A  161F               	bsf	31,4	;volatile
   539  009B                     l835:	
   540                           
   541                           ;lab2.c: 102:     ADCON0bits.CHS3 = 1;
   542  009B  169F               	bsf	31,5	;volatile
   543  009C                     l837:	
   544                           
   545                           ;lab2.c: 103:     ADCON0bits.ADON = 1;
   546  009C  141F               	bsf	31,0	;volatile
   547  009D                     l839:	
   548                           
   549                           ;lab2.c: 104:     ADCON1bits.ADFM = 0;
   550  009D  1683               	bsf	3,5	;RP0=1, select bank1
   551  009E  1303               	bcf	3,6	;RP1=0, select bank1
   552  009F  139F               	bcf	31,7	;volatile
   553  00A0                     l841:	
   554                           
   555                           ;lab2.c: 105:     ADCON1bits.VCFG0 = 0;
   556  00A0  121F               	bcf	31,4	;volatile
   557  00A1                     l843:	
   558                           
   559                           ;lab2.c: 106:     ADCON1bits.VCFG1 = 0;
   560  00A1  129F               	bcf	31,5	;volatile
   561  00A2                     l845:	
   562                           
   563                           ;lab2.c: 109:     OPTION_REGbits.nRBPU = 1;
   564  00A2  1781               	bsf	1,7	;volatile
   565  00A3                     l847:	
   566                           
   567                           ;lab2.c: 110:     OPTION_REGbits.INTEDG = 0;
   568  00A3  1301               	bcf	1,6	;volatile
   569  00A4                     l849:	
   570                           
   571                           ;lab2.c: 111:     OPTION_REGbits.T0CS = 0;
   572  00A4  1281               	bcf	1,5	;volatile
   573  00A5                     l851:	
   574                           
   575                           ;lab2.c: 112:     OPTION_REGbits.T0SE = 0;
   576  00A5  1201               	bcf	1,4	;volatile
   577  00A6                     l853:	
   578                           
   579                           ;lab2.c: 113:     OPTION_REGbits.PSA = 0;
   580  00A6  1181               	bcf	1,3	;volatile
   581                           
   582                           ;lab2.c: 114:     OPTION_REGbits.PS = 0b000;
   583  00A7  30F8               	movlw	-8
   584  00A8  0581               	andwf	1,f	;volatile
   585  00A9                     l855:	
   586                           
   587                           ;lab2.c: 115:     TMR0 = 2;
   588  00A9  3002               	movlw	2
   589  00AA  1283               	bcf	3,5	;RP0=0, select bank0
   590  00AB  1303               	bcf	3,6	;RP1=0, select bank0
   591  00AC  0081               	movwf	1	;volatile
   592  00AD                     l857:	
   593                           
   594                           ;lab2.c: 118:     INTCONbits.GIE = 1;
   595  00AD  178B               	bsf	11,7	;volatile
   596  00AE                     l859:	
   597                           
   598                           ;lab2.c: 120:     INTCONbits.T0IE= 1;
   599  00AE  168B               	bsf	11,5	;volatile
   600  00AF                     l861:	
   601                           
   602                           ;lab2.c: 123:     INTCONbits.T0IF= 1;
   603  00AF  150B               	bsf	11,2	;volatile
   604  00B0                     l863:	
   605                           
   606                           ;lab2.c: 129:     y=0;
   607  00B0  01F3               	clrf	_y
   608  00B1                     l865:	
   609                           
   610                           ;lab2.c: 130:     x=0;
   611  00B1  01F4               	clrf	_x
   612  00B2                     l867:	
   613                           
   614                           ;lab2.c: 131:     BANDERA = 0;
   615  00B2  01F6               	clrf	_BANDERA
   616  00B3                     l869:	
   617                           
   618                           ;lab2.c: 132:     analogico();
   619  00B3  120A  118A  2028  120A  118A  	fcall	_analogico
   620  00B8                     l87:	
   621  00B8  120A  118A  280C   	ljmp	start
   622  00BB                     __end_of_main:	
   623                           
   624                           	psect	text1
   625  0028                     __ptext1:	
   626 ;; *************** function _analogico *****************
   627 ;; Defined at:
   628 ;;		line 136 in file "lab2.c"
   629 ;; Parameters:    Size  Location     Type
   630 ;;		None
   631 ;; Auto vars:     Size  Location     Type
   632 ;;		None
   633 ;; Return value:  Size  Location     Type
   634 ;;                  1    wreg      void 
   635 ;; Registers used:
   636 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   637 ;; Tracked objects:
   638 ;;		On entry : 0/0
   639 ;;		On exit  : 0/0
   640 ;;		Unchanged: 0/0
   641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   642 ;;      Params:         0       0       0       0       0
   643 ;;      Locals:         0       0       0       0       0
   644 ;;      Temps:          1       0       0       0       0
   645 ;;      Totals:         1       0       0       0       0
   646 ;;Total ram usage:        1 bytes
   647 ;; Hardware stack levels used:    1
   648 ;; Hardware stack levels required when called:    3
   649 ;; This function calls:
   650 ;;		_NIBBLES
   651 ;;		_desplegar
   652 ;; This function is called by:
   653 ;;		_main
   654 ;; This function uses a non-reentrant model
   655 ;;
   656                           
   657                           
   658                           ;psect for function _analogico
   659  0028                     _analogico:	
   660  0028                     l90:	
   661                           ;incstack = 0
   662                           ; Regs used in _analogico: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   663                           ;lab2.c: 137:         while(1){
   664                           
   665  0028                     l743:	
   666                           
   667                           ;lab2.c: 139:         _delay((unsigned long)((1)*(4000000/4000.0)));
   668  0028  30C7               	movlw	199
   669  0029  00FB               	movwf	??_analogico
   670  002A                     u137:	
   671  002A  282B               	nop2
   672  002B  0BFB               	decfsz	??_analogico,f
   673  002C  282A               	goto	u137
   674  002D  282E               	nop2
   675  002E  282F               	nop2
   676  002F                     l745:	
   677                           
   678                           ;lab2.c: 140:         if(ADCON0bits.GO_DONE == 0){
   679  002F  1283               	bcf	3,5	;RP0=0, select bank0
   680  0030  1303               	bcf	3,6	;RP1=0, select bank0
   681  0031  189F               	btfsc	31,1	;volatile
   682  0032  2834               	goto	u51
   683  0033  2835               	goto	u50
   684  0034                     u51:	
   685  0034  2836               	goto	l91
   686  0035                     u50:	
   687  0035                     l747:	
   688                           
   689                           ;lab2.c: 141:             ADCON0bits.GO_DONE = 1;
   690  0035  149F               	bsf	31,1	;volatile
   691  0036                     l91:	
   692                           ;lab2.c: 142:         }
   693                           
   694                           
   695                           ;lab2.c: 145:        if (RB0 == 1){
   696  0036  1C06               	btfss	6,0	;volatile
   697  0037  2839               	goto	u61
   698  0038  283A               	goto	u60
   699  0039                     u61:	
   700  0039  283C               	goto	l92
   701  003A                     u60:	
   702  003A                     l749:	
   703                           
   704                           ;lab2.c: 146:            ANTIREBOTEA = 1;
   705  003A  01F1               	clrf	_ANTIREBOTEA
   706  003B  0AF1               	incf	_ANTIREBOTEA,f
   707  003C                     l92:	
   708                           ;lab2.c: 147:        }
   709                           
   710                           
   711                           ;lab2.c: 148:         if(RB0 == 0 && ANTIREBOTEA ==1 ){
   712  003C  1806               	btfsc	6,0	;volatile
   713  003D  283F               	goto	u71
   714  003E  2840               	goto	u70
   715  003F                     u71:	
   716  003F  284E               	goto	l759
   717  0040                     u70:	
   718  0040                     l751:	
   719  0040  0371               	decf	_ANTIREBOTEA,w
   720  0041  1D03               	btfss	3,2
   721  0042  2844               	goto	u81
   722  0043  2845               	goto	u80
   723  0044                     u81:	
   724  0044  284E               	goto	l759
   725  0045                     u80:	
   726  0045                     l753:	
   727                           
   728                           ;lab2.c: 149:             ANTIREBOTEA = 0;
   729  0045  01F1               	clrf	_ANTIREBOTEA
   730  0046                     l755:	
   731                           
   732                           ;lab2.c: 151:             ADC++;
   733  0046  3001               	movlw	1
   734  0047  00FB               	movwf	??_analogico
   735  0048  087B               	movf	??_analogico,w
   736  0049  07F2               	addwf	_ADC,f
   737  004A                     l757:	
   738                           
   739                           ;lab2.c: 153:             i = ADC;
   740  004A  0872               	movf	_ADC,w
   741  004B  00FB               	movwf	??_analogico
   742  004C  087B               	movf	??_analogico,w
   743  004D  00F5               	movwf	_i
   744  004E                     l759:	
   745                           
   746                           ;lab2.c: 159:        if(RB1 == 1 ){
   747  004E  1C86               	btfss	6,1	;volatile
   748  004F  2851               	goto	u91
   749  0050  2852               	goto	u90
   750  0051                     u91:	
   751  0051  2854               	goto	l94
   752  0052                     u90:	
   753  0052                     l761:	
   754                           
   755                           ;lab2.c: 160:             ANTIREBOTEB= 1;
   756  0052  01F0               	clrf	_ANTIREBOTEB
   757  0053  0AF0               	incf	_ANTIREBOTEB,f
   758  0054                     l94:	
   759                           ;lab2.c: 161:         }
   760                           
   761                           
   762                           ;lab2.c: 162:        if(RB1 == 0 && ANTIREBOTEB ==1){
   763  0054  1886               	btfsc	6,1	;volatile
   764  0055  2857               	goto	u101
   765  0056  2858               	goto	u100
   766  0057                     u101:	
   767  0057  2864               	goto	l771
   768  0058                     u100:	
   769  0058                     l763:	
   770  0058  0370               	decf	_ANTIREBOTEB,w
   771  0059  1D03               	btfss	3,2
   772  005A  285C               	goto	u111
   773  005B  285D               	goto	u110
   774  005C                     u111:	
   775  005C  2864               	goto	l771
   776  005D                     u110:	
   777  005D                     l765:	
   778                           
   779                           ;lab2.c: 163:             ANTIREBOTEB= 0;
   780  005D  01F0               	clrf	_ANTIREBOTEB
   781  005E                     l767:	
   782                           
   783                           ;lab2.c: 164:             ADC--;
   784  005E  3001               	movlw	1
   785  005F  02F2               	subwf	_ADC,f
   786  0060                     l769:	
   787                           
   788                           ;lab2.c: 166:             i = ADC;
   789  0060  0872               	movf	_ADC,w
   790  0061  00FB               	movwf	??_analogico
   791  0062  087B               	movf	??_analogico,w
   792  0063  00F5               	movwf	_i
   793  0064                     l771:	
   794                           
   795                           ;lab2.c: 174:         x= ADRESH;
   796  0064  081E               	movf	30,w	;volatile
   797  0065  00FB               	movwf	??_analogico
   798  0066  087B               	movf	??_analogico,w
   799  0067  00F4               	movwf	_x
   800  0068                     l773:	
   801                           
   802                           ;lab2.c: 175:         y = ADRESH;
   803  0068  081E               	movf	30,w	;volatile
   804  0069  00FB               	movwf	??_analogico
   805  006A  087B               	movf	??_analogico,w
   806  006B  00F3               	movwf	_y
   807  006C                     l775:	
   808                           
   809                           ;lab2.c: 176:         NIBBLES();
   810  006C  120A  118A  2126  120A  118A  	fcall	_NIBBLES
   811  0071                     l777:	
   812                           
   813                           ;lab2.c: 179:        desplegar();
   814  0071  120A  118A  20BB  120A  118A  	fcall	_desplegar
   815  0076  2828               	goto	l90
   816  0077  0008               	return
   817  0078                     __end_of_analogico:	
   818                           
   819                           	psect	text2
   820  00BB                     __ptext2:	
   821 ;; *************** function _desplegar *****************
   822 ;; Defined at:
   823 ;;		line 185 in file "lab2.c"
   824 ;; Parameters:    Size  Location     Type
   825 ;;		None
   826 ;; Auto vars:     Size  Location     Type
   827 ;;		None
   828 ;; Return value:  Size  Location     Type
   829 ;;                  1    wreg      void 
   830 ;; Registers used:
   831 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   832 ;; Tracked objects:
   833 ;;		On entry : 0/0
   834 ;;		On exit  : 0/0
   835 ;;		Unchanged: 0/0
   836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   837 ;;      Params:         0       0       0       0       0
   838 ;;      Locals:         0       0       0       0       0
   839 ;;      Temps:          0       0       0       0       0
   840 ;;      Totals:         0       0       0       0       0
   841 ;;Total ram usage:        0 bytes
   842 ;; Hardware stack levels used:    1
   843 ;; Hardware stack levels required when called:    2
   844 ;; This function calls:
   845 ;;		Nothing
   846 ;; This function is called by:
   847 ;;		_analogico
   848 ;; This function uses a non-reentrant model
   849 ;;
   850                           
   851                           
   852                           ;psect for function _desplegar
   853  00BB                     _desplegar:	
   854  00BB                     l709:	
   855                           ;incstack = 0
   856                           ; Regs used in _desplegar: [wreg-fsr0h+status,2+status,0]
   857                           
   858                           
   859                           ;lab2.c: 186:        PORTC = 0;
   860  00BB  1283               	bcf	3,5	;RP0=0, select bank0
   861  00BC  1303               	bcf	3,6	;RP1=0, select bank0
   862  00BD  0187               	clrf	7	;volatile
   863  00BE                     l711:	
   864                           
   865                           ;lab2.c: 187:         RD0 = 0;
   866  00BE  1008               	bcf	8,0	;volatile
   867  00BF                     l713:	
   868                           
   869                           ;lab2.c: 188:         RD1 = 0;
   870  00BF  1088               	bcf	8,1	;volatile
   871  00C0                     l715:	
   872                           
   873                           ;lab2.c: 189:         if(BANDERA ==1){
   874  00C0  0376               	decf	_BANDERA,w
   875  00C1  1D03               	btfss	3,2
   876  00C2  28C4               	goto	u21
   877  00C3  28C5               	goto	u20
   878  00C4                     u21:	
   879  00C4  28CE               	goto	l725
   880  00C5                     u20:	
   881  00C5                     l717:	
   882                           
   883                           ;lab2.c: 190:             PORTC = DISPLAY1[x];
   884  00C5  0874               	movf	_x,w
   885  00C6  3E30               	addlw	(low (_DISPLAY1| 0))& (0+255)
   886  00C7  0084               	movwf	4
   887  00C8  1383               	bcf	3,7	;select IRP bank0
   888  00C9  0800               	movf	0,w
   889  00CA  0087               	movwf	7	;volatile
   890  00CB                     l719:	
   891                           
   892                           ;lab2.c: 191:             RD0 = 1;
   893  00CB  1408               	bsf	8,0	;volatile
   894  00CC                     l721:	
   895                           
   896                           ;lab2.c: 192:             RD1=0;
   897  00CC  1088               	bcf	8,1	;volatile
   898  00CD  28DB               	goto	l102
   899  00CE                     l725:	
   900                           
   901                           ;lab2.c: 196:         if(BANDERA == 0){
   902  00CE  0876               	movf	_BANDERA,w
   903  00CF  1D03               	btfss	3,2
   904  00D0  28D2               	goto	u31
   905  00D1  28D3               	goto	u30
   906  00D2                     u31:	
   907  00D2  28DB               	goto	l102
   908  00D3                     u30:	
   909  00D3                     l727:	
   910                           
   911                           ;lab2.c: 198:             PORTC = DISPLAY2[y];
   912  00D3  0873               	movf	_y,w
   913  00D4  3E20               	addlw	(low (_DISPLAY2| 0))& (0+255)
   914  00D5  0084               	movwf	4
   915  00D6  1383               	bcf	3,7	;select IRP bank0
   916  00D7  0800               	movf	0,w
   917  00D8  0087               	movwf	7	;volatile
   918  00D9                     l729:	
   919                           
   920                           ;lab2.c: 199:             RD1 = 1;
   921  00D9  1488               	bsf	8,1	;volatile
   922  00DA                     l731:	
   923                           
   924                           ;lab2.c: 200:             RD0 = 0;
   925  00DA  1008               	bcf	8,0	;volatile
   926  00DB                     l102:	
   927  00DB  0008               	return
   928  00DC                     __end_of_desplegar:	
   929                           
   930                           	psect	text3
   931  0126                     __ptext3:	
   932 ;; *************** function _NIBBLES *****************
   933 ;; Defined at:
   934 ;;		line 208 in file "lab2.c"
   935 ;; Parameters:    Size  Location     Type
   936 ;;		None
   937 ;; Auto vars:     Size  Location     Type
   938 ;;		None
   939 ;; Return value:  Size  Location     Type
   940 ;;                  1    wreg      void 
   941 ;; Registers used:
   942 ;;		wreg, status,2, status,0
   943 ;; Tracked objects:
   944 ;;		On entry : 0/0
   945 ;;		On exit  : 0/0
   946 ;;		Unchanged: 0/0
   947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   948 ;;      Params:         0       0       0       0       0
   949 ;;      Locals:         0       0       0       0       0
   950 ;;      Temps:          2       0       0       0       0
   951 ;;      Totals:         2       0       0       0       0
   952 ;;Total ram usage:        2 bytes
   953 ;; Hardware stack levels used:    1
   954 ;; Hardware stack levels required when called:    2
   955 ;; This function calls:
   956 ;;		Nothing
   957 ;; This function is called by:
   958 ;;		_analogico
   959 ;; This function uses a non-reentrant model
   960 ;;
   961                           
   962                           
   963                           ;psect for function _NIBBLES
   964  0126                     _NIBBLES:	
   965  0126                     l703:	
   966                           ;incstack = 0
   967                           ; Regs used in _NIBBLES: [wreg+status,2+status,0]
   968                           
   969                           
   970                           ;lab2.c: 209:         x = x & 0x0F;
   971  0126  0874               	movf	_x,w
   972  0127  390F               	andlw	15
   973  0128  00F9               	movwf	??_NIBBLES
   974  0129  0879               	movf	??_NIBBLES,w
   975  012A  00F4               	movwf	_x
   976  012B                     l705:	
   977                           
   978                           ;lab2.c: 210:         y = ((y & 0xF0)>>4);
   979  012B  0873               	movf	_y,w
   980  012C  00F9               	movwf	??_NIBBLES
   981  012D  3004               	movlw	4
   982  012E                     u15:	
   983  012E  1003               	clrc
   984  012F  0CF9               	rrf	??_NIBBLES,f
   985  0130  3EFF               	addlw	-1
   986  0131  1D03               	skipz
   987  0132  292E               	goto	u15
   988  0133  0879               	movf	??_NIBBLES,w
   989  0134  390F               	andlw	15
   990  0135  00FA               	movwf	??_NIBBLES+1
   991  0136  087A               	movf	??_NIBBLES+1,w
   992  0137  00F3               	movwf	_y
   993  0138                     l106:	
   994  0138  0008               	return
   995  0139                     __end_of_NIBBLES:	
   996                           
   997                           	psect	text4
   998  00FC                     __ptext4:	
   999 ;; *************** function _ISR *****************
  1000 ;; Defined at:
  1001 ;;		line 59 in file "lab2.c"
  1002 ;; Parameters:    Size  Location     Type
  1003 ;;		None
  1004 ;; Auto vars:     Size  Location     Type
  1005 ;;		None
  1006 ;; Return value:  Size  Location     Type
  1007 ;;                  1    wreg      void 
  1008 ;; Registers used:
  1009 ;;		wreg, status,2, status,0, pclath, cstack
  1010 ;; Tracked objects:
  1011 ;;		On entry : 0/0
  1012 ;;		On exit  : 0/0
  1013 ;;		Unchanged: 0/0
  1014 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1015 ;;      Params:         0       0       0       0       0
  1016 ;;      Locals:         0       0       0       0       0
  1017 ;;      Temps:          2       0       0       0       0
  1018 ;;      Totals:         2       0       0       0       0
  1019 ;;Total ram usage:        2 bytes
  1020 ;; Hardware stack levels used:    1
  1021 ;; Hardware stack levels required when called:    1
  1022 ;; This function calls:
  1023 ;;		_TOGGLE
  1024 ;; This function is called by:
  1025 ;;		Interrupt level 1
  1026 ;; This function uses a non-reentrant model
  1027 ;;
  1028                           
  1029                           
  1030                           ;psect for function _ISR
  1031  00FC                     _ISR:	
  1032  00FC                     i1l779:	
  1033                           
  1034                           ;lab2.c: 61:     if (TMR0IF==1){
  1035  00FC  1D0B               	btfss	11,2	;volatile
  1036  00FD  28FF               	goto	u12_21
  1037  00FE  2900               	goto	u12_20
  1038  00FF                     u12_21:	
  1039  00FF  290C               	goto	i1l82
  1040  0100                     u12_20:	
  1041  0100                     i1l781:	
  1042                           
  1043                           ;lab2.c: 62:         TOGGLE();
  1044  0100  120A  118A  2139  120A  118A  	fcall	_TOGGLE
  1045  0105                     i1l783:	
  1046                           
  1047                           ;lab2.c: 63:         TMR0IF=0;
  1048  0105  110B               	bcf	11,2	;volatile
  1049  0106                     i1l785:	
  1050                           
  1051                           ;lab2.c: 64:         TMR0= 2;
  1052  0106  3002               	movlw	2
  1053  0107  1283               	bcf	3,5	;RP0=0, select bank0
  1054  0108  1303               	bcf	3,6	;RP1=0, select bank0
  1055  0109  0081               	movwf	1	;volatile
  1056  010A                     i1l787:	
  1057                           
  1058                           ;lab2.c: 65:         PORTA = i;
  1059  010A  0875               	movf	_i,w
  1060  010B  0085               	movwf	5	;volatile
  1061  010C                     i1l82:	
  1062  010C  0878               	movf	??_ISR+1,w
  1063  010D  008A               	movwf	10
  1064  010E  0E77               	swapf	??_ISR^(0+4294967168),w
  1065  010F  0083               	movwf	3
  1066  0110  0EFE               	swapf	btemp,f
  1067  0111  0E7E               	swapf	btemp,w
  1068  0112  0009               	retfie
  1069  0113                     __end_of_ISR:	
  1070                           
  1071                           	psect	intentry
  1072  0004                     __pintentry:	
  1073                           ;incstack = 0
  1074                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  1075                           
  1076  0004                     interrupt_function:	
  1077  007E                     saved_w	set	btemp
  1078  0004  00FE               	movwf	btemp
  1079  0005  0E03               	swapf	3,w
  1080  0006  00F7               	movwf	??_ISR
  1081  0007  080A               	movf	10,w
  1082  0008  00F8               	movwf	??_ISR+1
  1083  0009  120A  118A  28FC   	ljmp	_ISR
  1084                           
  1085                           	psect	text5
  1086  0139                     __ptext5:	
  1087 ;; *************** function _TOGGLE *****************
  1088 ;; Defined at:
  1089 ;;		line 216 in file "lab2.c"
  1090 ;; Parameters:    Size  Location     Type
  1091 ;;		None
  1092 ;; Auto vars:     Size  Location     Type
  1093 ;;		None
  1094 ;; Return value:  Size  Location     Type
  1095 ;;                  1    wreg      void 
  1096 ;; Registers used:
  1097 ;;		wreg, status,2, status,0
  1098 ;; Tracked objects:
  1099 ;;		On entry : 0/0
  1100 ;;		On exit  : 0/0
  1101 ;;		Unchanged: 0/0
  1102 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1103 ;;      Params:         0       0       0       0       0
  1104 ;;      Locals:         0       0       0       0       0
  1105 ;;      Temps:          0       0       0       0       0
  1106 ;;      Totals:         0       0       0       0       0
  1107 ;;Total ram usage:        0 bytes
  1108 ;; Hardware stack levels used:    1
  1109 ;; This function calls:
  1110 ;;		Nothing
  1111 ;; This function is called by:
  1112 ;;		_ISR
  1113 ;; This function uses a non-reentrant model
  1114 ;;
  1115                           
  1116                           
  1117                           ;psect for function _TOGGLE
  1118  0139                     _TOGGLE:	
  1119  0139                     i1l735:	
  1120                           ;incstack = 0
  1121                           ; Regs used in _TOGGLE: [wreg+status,2+status,0]
  1122                           
  1123                           
  1124                           ;lab2.c: 217:         if(BANDERA==1){
  1125  0139  0376               	decf	_BANDERA,w
  1126  013A  1D03               	btfss	3,2
  1127  013B  293D               	goto	u4_21
  1128  013C  293E               	goto	u4_20
  1129  013D                     u4_21:	
  1130  013D  2940               	goto	i1l109
  1131  013E                     u4_20:	
  1132  013E                     i1l737:	
  1133                           
  1134                           ;lab2.c: 218:             BANDERA =0;
  1135  013E  01F6               	clrf	_BANDERA
  1136  013F  2942               	goto	i1l110
  1137  0140                     i1l109:	
  1138                           ;lab2.c: 221:         else{
  1139                           
  1140                           
  1141                           ;lab2.c: 222:             BANDERA = 1;
  1142  0140  01F6               	clrf	_BANDERA
  1143  0141  0AF6               	incf	_BANDERA,f
  1144  0142                     i1l110:	
  1145                           ;lab2.c: 223:             return;
  1146                           
  1147  0142  0008               	return
  1148  0143                     __end_of_TOGGLE:	
  1149  007E                     btemp	set	126	;btemp
  1150  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        32
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      12
    BANK0            80      0      32
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_analogico
    _analogico->_NIBBLES

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                          _analogico
 ---------------------------------------------------------------------------------
 (1) _analogico                                            1     1      0       0
                                              4 COMMON     1     1      0
                            _NIBBLES
                          _desplegar
 ---------------------------------------------------------------------------------
 (2) _desplegar                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _NIBBLES                                              2     2      0       0
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
                             _TOGGLE
 ---------------------------------------------------------------------------------
 (4) _TOGGLE                                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _analogico
     _NIBBLES
     _desplegar

 _ISR (ROOT)
   _TOGGLE

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0      20       5       40.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      5       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      2C      12        0.0%
ABS                  0      0      2C       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sun Feb 02 23:00:47 2020

                       _i 0075                         _x 0074                         _y 0073  
                       pc 0002               __CFG_CP$OFF 0000                        l90 0028  
                      l91 0036                        l92 003C                        l94 0054  
                      l87 00B8                        u20 00C5                        u21 00C4  
                      u30 00D3                        u15 012E                        u31 00D2  
                      u50 0035                        u51 0034                        u60 003A  
                      u61 0039                        u70 0040                        u71 003F  
                      u80 0045                        u81 0044                        u90 0052  
                      u91 0051                        fsr 0004                       l102 00DB  
                     l106 0138                       _ADC 0072                       l703 0126  
                     l711 00BE                       l705 012B                       l721 00CC  
                     l713 00BF                       l801 0082                       l731 00DA  
                     l715 00C0                       l811 008D                       l803 0085  
                     l717 00C5                       l725 00CE                       l709 00BB  
                     l821 0094                       l813 008E                       l805 0087  
                     l727 00D3                       l719 00CB                       l751 0040  
                     l743 0028                       l831 0099                       l823 0095  
                     l815 008F                       l807 008A                       l729 00D9  
                     l761 0052                       l753 0045                       l745 002F  
                     l841 00A0                       l833 009A                       l825 0096  
                     l817 0092                       l809 008C                       l763 0058  
                     l771 0064                       l755 0046                       l747 0035  
                     l851 00A5                       l843 00A1                       l835 009B  
                     l827 0097                       l819 0093                       l773 0068  
                     l765 005D                       l757 004A                       l749 003A  
                     l861 00AF                       l853 00A6                       l845 00A2  
                     l837 009C                       l829 0098                       l775 006C  
                     l767 005E                       l759 004E                       l863 00B0  
                     l855 00A9                       l847 00A3                       l839 009D  
                     l791 0078                       l777 0071                       l769 0060  
                     l865 00B1                       l857 00AD                       l849 00A4  
                     l793 007E                       l867 00B2                       l859 00AE  
                     l795 007F                       l869 00B3                       l797 0080  
                     l799 0081                       _RB0 0030                       _RB1 0031  
                     _RD0 0040                       _RD1 0041                       u100 0058  
                     u101 0057                       u110 005D                       u111 005C  
                     u137 002A              __CFG_CPD$OFF 0000                       _ISR 00FC  
                     fsr0 0004                       indf 0000           __end_of_NIBBLES 0139  
            __CFG_LVP$OFF 0000                      ?_ISR 0077                      i1l82 010C  
                    _TMR0 0001                      u4_20 013E                      u4_21 013D  
            __CFG_WRT$OFF 0000                      _main 0078                      btemp 007E  
                    start 000C             __CFG_IESO$OFF 0000                     ??_ISR 0077  
                   ?_main 0077             __CFG_WDTE$OFF 0000                     _ANSEL 0188  
                   i1l110 0142                     i1l109 0140                     i1l735 0139  
                   i1l737 013E                     i1l781 0100                     i1l783 0105  
                   i1l785 0106                     i1l787 010A                     i1l779 00FC  
                   u12_20 0100                     u12_21 00FF                     _PORTA 0005  
                   _PORTB 0006                     _PORTC 0007                     _PORTD 0008  
                   _PORTE 0009                     _TRISA 0085                     _TRISB 0086  
                   _TRISC 0087                     _TRISD 0088                     _TRISE 0089  
          __CFG_FCMEN$OFF 0000            __CFG_BOREN$OFF 0000                     pclath 000A  
                   status 0003                     wtemp0 007E            __CFG_MCLRE$OFF 0000  
         __initialization 000F              __end_of_main 00BB                    ??_main 007C  
               ??_NIBBLES 0079                    _ADRESH 001E                    _ANSELH 0189  
                  _TMR0IF 005A                    _TOGGLE 0139            __CFG_PWRTE$OFF 0000  
                  saved_w 007E   __end_of__initialization 0024            __pcstackCOMMON 0077  
            __pidataBANK0 00DC        __size_of_analogico 0050            _OPTION_REGbits 0081  
      __size_of_desplegar 0021                   ?_TOGGLE 0077                __pmaintext 0078  
              __pintentry 0004                   _BANDERA 0076                   _NIBBLES 0126  
       __end_of_analogico 0078           __size_of_TOGGLE 000A         __end_of_desplegar 00DC  
                 __ptext1 0028                   __ptext2 00BB                   __ptext3 0126  
                 __ptext4 00FC                   __ptext5 0139              __size_of_ISR 0017  
    end_of_initialization 0024            __end_of_TOGGLE 0143       start_initialization 000F  
             __end_of_ISR 0113                  ??_TOGGLE 0077  __CFG_FOSC$INTRC_NOCLKOUT 0000  
              init_fetch0 0113               __pdataBANK0 0020                  ?_NIBBLES 0077  
             __pbssCOMMON 0070                 ___latbits 0002               _ANTIREBOTEA 0071  
             _ANTIREBOTEB 0070                 _analogico 0028                 _desplegar 00BB  
                _DISPLAY1 0030                  _DISPLAY2 0020         interrupt_function 0004  
              ?_analogico 0077                ?_desplegar 0077                _ADCON0bits 001F  
              _ADCON1bits 009F          __size_of_NIBBLES 0013         __CFG_BOR4V$BOR40V 0000  
           __size_of_main 0043               ??_analogico 007B               ??_desplegar 0079  
              _INTCONbits 000B                  init_ram0 0117                  intlevel1 0000  
              _OSCCONbits 008F  
